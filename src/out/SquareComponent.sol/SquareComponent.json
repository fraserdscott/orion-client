{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "x",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "width",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "height",
              "type": "int256"
            }
          ],
          "internalType": "struct Collider",
          "name": "value",
          "type": "tuple"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "x",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "width",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "height",
              "type": "int256"
            }
          ],
          "internalType": "struct Collider",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "indexer",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "x",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "width",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "height",
              "type": "int256"
            }
          ],
          "internalType": "struct Collider",
          "name": "value",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "271:851:32:-:0;;;315:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;352:5;230:37;222:46;;1579:9:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1568:8:9;:20;;-1:-1:-1;;;;;;1568:20:9;-1:-1:-1;;;;;1568:20:9;;;;;;;;;;1612:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1594:15:9;:30;;-1:-1:-1;;;;;;1594:30:9;;;-1:-1:-1;;;;;1594:30:9;;;;;;;-1:-1:-1;1630:19:9;;1639:10;1630:19;;;;;;-1:-1:-1;1655:23:9;;;:11;:23;;;;;;:30;;-1:-1:-1;;1655:30:9;;;;;;1691:2;:8;;;1709:20;;;1705:47;;1731:21;1745:6;1731:13;:21::i;:::-;1521:236;;315:50:32;271:851;;2625:137:9;1871:6;;-1:-1:-1;;;;;1871:6:9;1857:10;:20;1849:43;;;;-1:-1:-1;;;1849:43:9;;511:2:35;1849:43:9;;;493:21:35;550:2;530:18;;;523:30;-1:-1:-1;;;569:18:35;;;562:40;619:18;;1849:43:9;;;;;;;;2687:5:::1;:14:::0;;-1:-1:-1;;;;;;2687:14:9::1;-1:-1:-1::0;;;;;2687:14:9;::::1;::::0;;::::1;::::0;;;2754:2:::1;::::0;2707:50:::1;::::0;-1:-1:-1;;;2707:50:9;;2747:4:::1;2707:50;::::0;::::1;822:51:35::0;889:18;;;882:34;;;;2707:31:9::1;::::0;795:18:35;;2707:50:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2625:137:::0;:::o;271:851:32:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:290:35:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:35;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:35:o;648:274::-;271:851:32;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638b282947116100a2578063b361be4611610071578063b361be461461028f578063b8bc073d146102a2578063cc6ae2bd146102c2578063cccf7a8e146102d5578063f2fde38b146102e857600080fd5b80638b282947146102415780638da5cb5b146102545780639d2c76b414610265578063af640d0f1461027857600080fd5b80634cc82215116100e95780634cc82215146101bf5780634fef6a38146101d25780636b122fe0146101e557806375c0669c146101fb578063861eb9051461020e57600080fd5b80630ff4c9161461011b57806330b67baa1461016a57806331b933b9146101955780633a727344146101aa575b600080fd5b61012e610129366004610e66565b6102fb565b60405161016191908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b60405180910390f35b60005461017d906001600160a01b031681565b6040516001600160a01b039091168152602001610161565b61019d610348565b6040516101619190610e7f565b6101bd6101b8366004610edb565b6103bf565b005b6101bd6101cd366004610e66565b61040b565b6101bd6101e0366004610f08565b6106e0565b6101ed61072e565b604051610161929190610f94565b6101bd610209366004610f08565b61082e565b61023161021c366004610f08565b60026020526000908152604090205460ff1681565b6040519015158152602001610161565b6101bd61024f366004611103565b6108af565b6001546001600160a01b031661017d565b6101bd610273366004610f08565b610b5d565b61028160075481565b604051908152602001610161565b61019d61029d36600461114a565b610bd1565b6102b56102b0366004610e66565b610c4b565b6040516101619190611187565b61019d6102d036600461119a565b610ced565b6102316102e3366004610e66565b610d35565b6101bd6102f6366004610f08565b610da3565b6103266040518060800160405280600081526020016000815260200160008152602001600081525090565b61032f82610c4b565b80602001905181019061034291906111b6565b92915050565b60035460408051631043567360e21b815290516060926001600160a01b03169163410d59cc9160048083019260009291908290030181865afa158015610392573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ba919081019061121c565b905090565b6040805182356020808301919091528301358183015290820135606080830191909152820135608082015261040790839060a0016040516020818303038152906040526108af565b5050565b3360009081526002602052604090205460ff166104435760405162461bcd60e51b815260040161043a906112c2565b60405180910390fd5b6005546000828152600460205260409081902090516001600160a01b03909216916385edea13916104739161131b565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa1580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190611391565b156106dd576005546000828152600460205260409081902090516001600160a01b0390921691636526db7a9161050b9161131b565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101849052604401600060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b5050600354604051634cc8221560e01b8152600481018590526001600160a01b039091169250634cc822159150602401600060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b50505060008281526004602052604081206105dc925090610e18565b60005b60065481101561067657600681815481106105fc576105fc6113aa565b600091825260209091200154604051634cc8221560e01b8152600481018490526001600160a01b0390911690634cc8221590602401600060405180830381600087803b15801561064b57600080fd5b505af115801561065f573d6000803e3d6000fd5b50505050808061066e906113c0565b9150506105df565b50600054604051636c01832560e11b8152306004820152602481018390526001600160a01b039091169063d803064a906044015b600060405180830381600087803b1580156106c457600080fd5b505af11580156106d8573d6000803e3d6000fd5b505050505b50565b6001546001600160a01b0316331461070a5760405162461bcd60e51b815260040161043a906113e7565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b606080604051806040016040528060018152602001600f60fb1b8152508260008151811061075e5761075e6113aa565b602002602001018190525060068160008151811061077e5761077e6113aa565b6020026020010190601f81111561079757610797610f7e565b9081601f8111156107aa576107aa610f7e565b81525050604051806040016040528060018152602001607960f81b815250826001815181106107db576107db6113aa565b60200260200101819052506006816001815181106107fb576107fb6113aa565b6020026020010190601f81111561081457610814610f7e565b9081601f81111561082757610827610f7e565b9052509091565b3360009081526002602052604090205460ff1661085d5760405162461bcd60e51b815260040161043a906112c2565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526002602052604090205460ff166108de5760405162461bcd60e51b815260040161043a906112c2565b600354604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b15801561092457600080fd5b505af1158015610938573d6000803e3d6000fd5b50506005546000858152600460205260409081902090516001600160a01b039092169350636526db7a925061096c9161131b565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101859052604401600060405180830381600087803b1580156109af57600080fd5b505af11580156109c3573d6000803e3d6000fd5b505050600083815260046020526040902090506109e08282611456565b506005548151602083012060405163771602f760e01b81526001600160a01b039092169163771602f791610a21918690600401918252602082015260400190565b600060405180830381600087803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b5050505060005b600654811015610af25760068181548110610a7357610a736113aa565b6000918252602090912001546040516242d70760e31b81526001600160a01b0390911690630216b83890610aad9086908690600401611516565b600060405180830381600087803b158015610ac757600080fd5b505af1158015610adb573d6000803e3d6000fd5b505050508080610aea906113c0565b915050610a56565b506000546040516302bc413960e61b81526001600160a01b039091169063af104e4090610b279030908690869060040161152f565b600060405180830381600087803b158015610b4157600080fd5b505af1158015610b55573d6000803e3d6000fd5b505050505050565b6001546001600160a01b03163314610b875760405162461bcd60e51b815260040161043a906113e7565b600080546001600160a01b0319166001600160a01b038316908117909155600754604051630f30347760e41b8152306004820152602481019190915263f3034770906044016106aa565b60055481516020830120604051631e5b17a560e21b815260048101919091526060916001600160a01b03169063796c5e9490602401600060405180830381865afa158015610c23573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610342919081019061121c565b6000818152600460205260409020805460609190610c68906112e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610c94906112e7565b8015610ce15780601f10610cb657610100808354040283529160200191610ce1565b820191906000526020600020905b815481529060010190602001808311610cc457829003601f168201915b50505050509050919050565b6040805182356020808301919091528301358183015290820135606082810191909152828101356080830152906103429060a001604051602081830303815290604052610bd1565b600354604051636667bd4760e11b8152600481018390526000916001600160a01b03169063cccf7a8e90602401602060405180830381865afa158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610342919061155f565b6001546001600160a01b03163314610dcd5760405162461bcd60e51b815260040161043a906113e7565b33600090815260026020526040808220805460ff19908116909155600180546001600160a01b0319166001600160a01b03959095169485178155938352912080549091169091179055565b508054610e24906112e7565b6000825580601f10610e34575050565b601f0160209004906000526020600020908101906106dd91905b80821115610e625760008155600101610e4e565b5090565b600060208284031215610e7857600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610eb757835183529284019291840191600101610e9b565b50909695505050505050565b600060808284031215610ed557600080fd5b50919050565b60008060a08385031215610eee57600080fd5b82359150610eff8460208501610ec3565b90509250929050565b600060208284031215610f1a57600080fd5b81356001600160a01b0381168114610f3157600080fd5b9392505050565b6000815180845260005b81811015610f5e57602081850181015186830182015201610f42565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015610feb57605f19888703018552610fd9868351610f38565b95509382019390820190600101610fbd565b50508584038187015286518085528782019482019350915060005b8281101561103f57845182811061102d57634e487b7160e01b600052602160045260246000fd5b84529381019392810192600101611006565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561108b5761108b61104c565b604052919050565b600082601f8301126110a457600080fd5b813567ffffffffffffffff8111156110be576110be61104c565b6110d1601f8201601f1916602001611062565b8181528460208386010111156110e657600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561111657600080fd5b82359150602083013567ffffffffffffffff81111561113457600080fd5b61114085828601611093565b9150509250929050565b60006020828403121561115c57600080fd5b813567ffffffffffffffff81111561117357600080fd5b61117f84828501611093565b949350505050565b602081526000610f316020830184610f38565b6000608082840312156111ac57600080fd5b610f318383610ec3565b6000608082840312156111c857600080fd5b6040516080810181811067ffffffffffffffff821117156111eb576111eb61104c565b8060405250825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b6000602080838503121561122f57600080fd5b825167ffffffffffffffff8082111561124757600080fd5b818501915085601f83011261125b57600080fd5b81518181111561126d5761126d61104c565b8060051b915061127e848301611062565b818152918301840191848101908884111561129857600080fd5b938501935b838510156112b65784518252938501939085019061129d565b98975050505050505050565b6020808252600b908201526a27a7262cafaba924aa22a960a91b604082015260600190565b600181811c908216806112fb57607f821691505b602082108103610ed557634e487b7160e01b600052602260045260246000fd5b6000808354611329816112e7565b60018281168015611341576001811461135657611385565b60ff1984168752821515830287019450611385565b8760005260208060002060005b8581101561137c5781548a820152908401908201611363565b50505082870194505b50929695505050505050565b6000602082840312156113a357600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016113e057634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252600a908201526927a7262cafa7aba722a960b11b604082015260600190565b601f82111561145157600081815260208120601f850160051c810160208610156114325750805b601f850160051c820191505b81811015610b555782815560010161143e565b505050565b815167ffffffffffffffff8111156114705761147061104c565b6114848161147e84546112e7565b8461140b565b602080601f8311600181146114b957600084156114a15750858301515b600019600386901b1c1916600185901b178555610b55565b600085815260208120601f198616915b828110156114e8578886015182559484019460019091019084016114c9565b50858210156115065787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b82815260406020820152600061117f6040830184610f38565b60018060a01b03841681528260208201526060604082015260006115566060830184610f38565b95945050505050565b60006020828403121561157157600080fd5b81518015158114610f3157600080fdfea2646970667358221220c43f80ee2fe68d0df10142ff648a217b1fc4d54b5e1be9ff5273f6f4d502495d64736f6c63430008100033",
    "sourceMap": "271:851:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;485:139;;;;;;:::i;:::-;;:::i;:::-;;;;;;418:13:35;;400:32;;488:4;476:17;;;470:24;448:20;;;441:54;551:4;539:17;;;533:24;511:20;;;504:54;614:4;602:17;;;596:24;574:20;;;567:54;;;;387:3;372:19;;199:428;485:139:32;;;;;;;;821:20:9;;;;;-1:-1:-1;;;;;821:20:9;;;;;;-1:-1:-1;;;;;796:32:35;;;778:51;;766:2;751:18;821:20:9;632:203:35;5770:99:9;;;:::i;:::-;;;;;;;:::i;371:108:32:-;;;;;;:::i;:::-;;:::i;:::-;;4443:668:9;;;;;;:::i;:::-;;:::i;2951:95::-;;;;;;:::i;:::-;;:::i;821:299:32:-;;;:::i;:::-;;;;;;;;:::i;6440:111:9:-;;;;;;:::i;:::-;;:::i;1015:43::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4521:14:35;;4514:22;4496:41;;4484:2;4469:18;1015:43:9;4356:187:35;3539:658:9;;;;;;:::i;:::-;;:::i;2111:71::-;2171:6;;-1:-1:-1;;;;;2171:6:9;2111:71;;2625:137;;;;;;:::i;:::-;;:::i;1499:17::-;;;;;;;;;6034:25:35;;;6022:2;6007:18;1499:17:9;5888:177:35;6051:211:9;;;;;;:::i;:::-;;:::i;5531:154::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;630:185:32:-;;;;;;:::i;:::-;;:::i;5275:94:9:-;;;;;;:::i;:::-;;:::i;2349:161::-;;;;;;:::i;:::-;;:::i;485:139:32:-;540:15;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:15:32;585:19;597:6;585:11;:19::i;:::-;574:43;;;;;;;;;;;;:::i;:::-;567:50;485:139;-1:-1:-1;;485:139:32:o;5770:99:9:-;5845:8;;:19;;;-1:-1:-1;;;5845:19:9;;;;5814:16;;-1:-1:-1;;;;;5845:8:9;;:17;;:19;;;;;:8;;:19;;;;;;;:8;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5845:19:9;;;;;;;;;;;;:::i;:::-;5838:26;;5770:99;:::o;371:108:32:-;454:17;;;8655:20:35;;454:17:32;;;;8637:39:35;;;;8727:17;;8714:31;8692:20;;;8685:61;8797:17;;;8784:31;8762:20;;;;8755:61;;;;8867:17;;8854:31;8832:20;;;8825:61;442:30:32;;446:6;;8609:19:35;;454:17:32;;;;;;;;;;;;442:3;:30::i;:::-;371:108;;:::o;4443:668:9:-;2027:10;2015:23;;;;:11;:23;;;;;;;;2007:47;;;;-1:-1:-1;;;2007:47:9;;;;;;;:::i;:::-;;;;;;;;;4556:15:::1;::::0;::::1;4595:21:::0;;;:13:::1;:21;::::0;;;;;;4585:32;;-1:-1:-1;;;;;4556:15:9;;::::1;::::0;:20:::1;::::0;4585:32:::1;::::0;::::1;:::i;:::-;;::::0;;;;::::1;::::0;;4556:63:::1;::::0;;;-1:-1:-1;;;;;;4556:63:9;;;::::1;::::0;::::1;6034:25:35::0;6007:18;;4556:63:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4552:81:::0;4626:7:::1;4552:81;4689:15;::::0;::::1;4730:21:::0;;;:13:::1;:21;::::0;;;;;;4720:32;;-1:-1:-1;;;;;4689:15:9;;::::1;::::0;:22:::1;::::0;4720:32:::1;::::0;::::1;:::i;:::-;;::::0;;;;::::1;::::0;;4689:73:::1;::::0;;;-1:-1:-1;;;;;;4689:73:9;;;::::1;::::0;::::1;10955:25:35::0;10996:18;;;10989:34;;;10928:18;;4689:73:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4815:8:9::1;::::0;:23:::1;::::0;-1:-1:-1;;;4815:23:9;;::::1;::::0;::::1;6034:25:35::0;;;-1:-1:-1;;;;;4815:8:9;;::::1;::::0;-1:-1:-1;4815:15:9::1;::::0;-1:-1:-1;6007:18:35;;4815:23:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;4894:21:9::1;::::0;;;:13:::1;:21;::::0;;;;4887:28:::1;::::0;-1:-1:-1;4894:21:9;4887:28:::1;:::i;:::-;4927:9;4922:87;4946:8;:15:::0;4942:19;::::1;4922:87;;;4976:8;4985:1;4976:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;:26:::1;::::0;-1:-1:-1;;;4976:26:9;;::::1;::::0;::::1;6034:25:35::0;;;-1:-1:-1;;;;;4976:11:9;;::::1;::::0;:18:::1;::::0;6007::35;;4976:26:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4963:3;;;;;:::i;:::-;;;;4922:87;;;-1:-1:-1::0;5047:5:9::1;::::0;5040:66:::1;::::0;-1:-1:-1;;;5040:66:9;;5092:4:::1;5040:66;::::0;::::1;11577:51:35::0;11644:18;;;11637:34;;;-1:-1:-1;;;;;5047:5:9;;::::1;::::0;5040:43:::1;::::0;11550:18:35;;5040:66:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2060:1;4443:668:::0;:::o;2951:95::-;1871:6;;-1:-1:-1;;;;;1871:6:9;1857:10;:20;1849:43;;;;-1:-1:-1;;;1849:43:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;3015:19:9::1;;::::0;;;:11:::1;:19;::::0;;;;:26;;-1:-1:-1;;3015:26:9::1;3037:4;3015:26;::::0;;2951:95::o;821:299:32:-;904:20;926:36;978:13;;;;;;;;;;;;;-1:-1:-1;;;978:13:32;;;:4;983:1;978:7;;;;;;;;:::i;:::-;;;;;;:13;;;;1013:27;1001:6;1008:1;1001:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1051:13;;;;;;;;;;;;;-1:-1:-1;;;1051:13:32;;;:4;1056:1;1051:7;;;;;;;;:::i;:::-;;;;;;:13;;;;1086:27;1074:6;1081:1;1074:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;821:299:32;;:::o;6440:111:9:-;2027:10;2015:23;;;;:11;:23;;;;;;;;2007:47;;;;-1:-1:-1;;;2007:47:9;;;;;;;:::i;:::-;6508:8:::1;:38:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;6508:38:9;;;;;::::1;::::0;;-1:-1:-1;;;;;;6508:38:9::1;-1:-1:-1::0;;;;;6508:38:9;;;::::1;::::0;;;::::1;::::0;;6440:111::o;3539:658::-;2027:10;2015:23;;;;:11;:23;;;;;;;;2007:47;;;;-1:-1:-1;;;2007:47:9;;;;;;;:::i;:::-;3636:8:::1;::::0;:20:::1;::::0;-1:-1:-1;;;3636:20:9;;::::1;::::0;::::1;6034:25:35::0;;;-1:-1:-1;;;;;3636:8:9;;::::1;::::0;:12:::1;::::0;6007:18:35;;3636:20:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3739:15:9::1;::::0;::::1;3780:21:::0;;;:13:::1;:21;::::0;;;;;;3770:32;;-1:-1:-1;;;;;3739:15:9;;::::1;::::0;-1:-1:-1;3739:22:9::1;::::0;-1:-1:-1;3770:32:9::1;::::0;::::1;:::i;:::-;;::::0;;;;::::1;::::0;;3739:73:::1;::::0;;;-1:-1:-1;;;;;;3739:73:9;;;::::1;::::0;::::1;10955:25:35::0;10996:18;;;10989:34;;;10928:18;;3739:73:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;3852:21:9::1;::::0;;;:13:::1;:21;::::0;;;;;-1:-1:-1;3852:29:9::1;3876:5:::0;3852:21;:29:::1;:::i;:::-;-1:-1:-1::0;3937:15:9::1;::::0;3965:16;;::::1;::::0;::::1;::::0;3937:54:::1;::::0;-1:-1:-1;;;3937:54:9;;-1:-1:-1;;;;;3937:15:9;;::::1;::::0;:19:::1;::::0;:54:::1;::::0;3984:6;;3937:54:::1;;10955:25:35::0;;;11011:2;10996:18;;10989:34;10943:2;10928:18;;10781:248;3937:54:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4003:9;3998:94;4022:8;:15:::0;4018:19;::::1;3998:94;;;4052:8;4061:1;4052:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;:33:::1;::::0;-1:-1:-1;;;4052:33:9;;-1:-1:-1;;;;;4052:11:9;;::::1;::::0;:18:::1;::::0;:33:::1;::::0;4071:6;;4079:5;;4052:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4039:3;;;;;:::i;:::-;;;;3998:94;;;-1:-1:-1::0;4130:5:9::1;::::0;4123:69:::1;::::0;-1:-1:-1;;;4123:69:9;;-1:-1:-1;;;;;4130:5:9;;::::1;::::0;4123:39:::1;::::0;:69:::1;::::0;4171:4:::1;::::0;4178:6;;4186:5;;4123:69:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3539:658:::0;;:::o;2625:137::-;1871:6;;-1:-1:-1;;;;;1871:6:9;1857:10;:20;1849:43;;;;-1:-1:-1;;;1849:43:9;;;;;;;:::i;:::-;2687:5:::1;:14:::0;;-1:-1:-1;;;;;;2687:14:9::1;-1:-1:-1::0;;;;;2687:14:9;::::1;::::0;;::::1;::::0;;;2754:2:::1;::::0;2707:50:::1;::::0;-1:-1:-1;;;2707:50:9;;2747:4:::1;2707:50;::::0;::::1;11577:51:35::0;11644:18;;;11637:34;;;;2707:31:9::1;::::0;11550:18:35;;2707:50:9::1;11403:274:35::0;6051:211:9;6206:15;;6239:16;;;;;;6206:51;;-1:-1:-1;;;6206:51:9;;;;;6034:25:35;;;;6122:16:9;;-1:-1:-1;;;;;6206:15:9;;:24;;6007:18:35;;6206:51:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6206:51:9;;;;;;;;;;;;:::i;5531:154::-;5659:21;;;;:13;:21;;;;;5652:28;;5589:12;;5659:21;5652:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5531:154;;;:::o;630:185:32:-;790:17;;;8655:20:35;;790:17:32;;;;8637:39:35;;;;8727:17;;8714:31;8692:20;;;8685:61;8797:17;;;8784:31;730:16:32;8762:20:35;;;8755:61;;;;8867:17;;;8854:31;8832:20;;;8825:61;730:16:32;769:39;;8609:19:35;;790:17:32;;;;;;;;;;;;769:20;:39::i;5275:94:9:-;5344:8;;:20;;-1:-1:-1;;;5344:20:9;;;;;6034:25:35;;;5325:4:9;;-1:-1:-1;;;;;5344:8:9;;:12;;6007:18:35;;5344:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2349:161::-;1871:6;;-1:-1:-1;;;;;1871:6:9;1857:10;:20;1849:43;;;;-1:-1:-1;;;1849:43:9;;;;;;;:::i;:::-;2429:10:::1;2443:5;2417:23:::0;;;:11:::1;:23;::::0;;;;;:31;;-1:-1:-1;;2417:31:9;;::::1;::::0;;;-1:-1:-1;2454:17:9;;-1:-1:-1;;;;;;2454:17:9::1;-1:-1:-1::0;;;;;2454:17:9;;;::::1;::::0;;::::1;::::0;;2477:21;;;;;:28;;;;::::1;::::0;;::::1;::::0;;2349:161::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:35:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:35;;14:180;-1:-1:-1;14:180:35:o;840:632::-;1011:2;1063:21;;;1133:13;;1036:18;;;1155:22;;;982:4;;1011:2;1234:15;;;;1208:2;1193:18;;;982:4;1277:169;1291:6;1288:1;1285:13;1277:169;;;1352:13;;1340:26;;1421:15;;;;1386:12;;;;1313:1;1306:9;1277:169;;;-1:-1:-1;1463:3:35;;840:632;-1:-1:-1;;;;;;840:632:35:o;1477:157::-;1538:5;1583:3;1574:6;1569:3;1565:16;1561:26;1558:46;;;1600:1;1597;1590:12;1558:46;-1:-1:-1;1622:6:35;1477:157;-1:-1:-1;1477:157:35:o;1639:310::-;1736:6;1744;1797:3;1785:9;1776:7;1772:23;1768:33;1765:53;;;1814:1;1811;1804:12;1765:53;1850:9;1837:23;1827:33;;1879:64;1935:7;1930:2;1919:9;1915:18;1879:64;:::i;:::-;1869:74;;1639:310;;;;;:::o;1954:286::-;2013:6;2066:2;2054:9;2045:7;2041:23;2037:32;2034:52;;;2082:1;2079;2072:12;2034:52;2108:23;;-1:-1:-1;;;;;2160:31:35;;2150:42;;2140:70;;2206:1;2203;2196:12;2140:70;2229:5;1954:286;-1:-1:-1;;;1954:286:35:o;2245:423::-;2287:3;2325:5;2319:12;2352:6;2347:3;2340:19;2377:1;2387:162;2401:6;2398:1;2395:13;2387:162;;;2463:4;2519:13;;;2515:22;;2509:29;2491:11;;;2487:20;;2480:59;2416:12;2387:162;;;2391:3;2594:1;2587:4;2578:6;2573:3;2569:16;2565:27;2558:38;2657:4;2650:2;2646:7;2641:2;2633:6;2629:15;2625:29;2620:3;2616:39;2612:50;2605:57;;;2245:423;;;;:::o;2673:127::-;2734:10;2729:3;2725:20;2722:1;2715:31;2765:4;2762:1;2755:15;2789:4;2786:1;2779:15;2805:1546;3060:4;3108:2;3097:9;3093:18;3138:2;3127:9;3120:21;3161:6;3196;3190:13;3227:6;3219;3212:22;3265:2;3254:9;3250:18;3243:25;;3327:2;3317:6;3314:1;3310:14;3299:9;3295:30;3291:39;3277:53;;3349:4;3388:2;3380:6;3376:15;3409:1;3419:255;3433:6;3430:1;3427:13;3419:255;;;3526:2;3522:7;3510:9;3502:6;3498:22;3494:36;3489:3;3482:49;3554:40;3587:6;3578;3572:13;3554:40;:::i;:::-;3544:50;-1:-1:-1;3652:12:35;;;;3617:15;;;;3455:1;3448:9;3419:255;;;-1:-1:-1;;3710:22:35;;;3690:18;;;3683:50;3786:13;;3808:24;;;3890:15;;;;3850;;;-1:-1:-1;3786:13:35;-1:-1:-1;3925:1:35;3935:388;3951:8;3946:3;3943:17;3935:388;;;4022:8;4016:15;4061:2;4057;4054:10;4044:161;;4115:10;4110:3;4106:20;4103:1;4096:31;4154:4;4151:1;4144:15;4186:4;4183:1;4176:15;4044:161;4218:17;;4296;;;;4257:14;;;;3979:1;3970:11;3935:388;;;-1:-1:-1;4340:5:35;;2805:1546;-1:-1:-1;;;;;;;2805:1546:35:o;4548:127::-;4609:10;4604:3;4600:20;4597:1;4590:31;4640:4;4637:1;4630:15;4664:4;4661:1;4654:15;4680:275;4751:2;4745:9;4816:2;4797:13;;-1:-1:-1;;4793:27:35;4781:40;;4851:18;4836:34;;4872:22;;;4833:62;4830:88;;;4898:18;;:::i;:::-;4934:2;4927:22;4680:275;;-1:-1:-1;4680:275:35:o;4960:530::-;5002:5;5055:3;5048:4;5040:6;5036:17;5032:27;5022:55;;5073:1;5070;5063:12;5022:55;5109:6;5096:20;5135:18;5131:2;5128:26;5125:52;;;5157:18;;:::i;:::-;5201:55;5244:2;5225:13;;-1:-1:-1;;5221:27:35;5250:4;5217:38;5201:55;:::i;:::-;5281:2;5272:7;5265:19;5327:3;5320:4;5315:2;5307:6;5303:15;5299:26;5296:35;5293:55;;;5344:1;5341;5334:12;5293:55;5409:2;5402:4;5394:6;5390:17;5383:4;5374:7;5370:18;5357:55;5457:1;5432:16;;;5450:4;5428:27;5421:38;;;;5436:7;4960:530;-1:-1:-1;;;4960:530:35:o;5495:388::-;5572:6;5580;5633:2;5621:9;5612:7;5608:23;5604:32;5601:52;;;5649:1;5646;5639:12;5601:52;5685:9;5672:23;5662:33;;5746:2;5735:9;5731:18;5718:32;5773:18;5765:6;5762:30;5759:50;;;5805:1;5802;5795:12;5759:50;5828:49;5869:7;5860:6;5849:9;5845:22;5828:49;:::i;:::-;5818:59;;;5495:388;;;;;:::o;6070:320::-;6138:6;6191:2;6179:9;6170:7;6166:23;6162:32;6159:52;;;6207:1;6204;6197:12;6159:52;6247:9;6234:23;6280:18;6272:6;6269:30;6266:50;;;6312:1;6309;6302:12;6266:50;6335:49;6376:7;6367:6;6356:9;6352:22;6335:49;:::i;:::-;6325:59;6070:320;-1:-1:-1;;;;6070:320:35:o;6395:218::-;6542:2;6531:9;6524:21;6505:4;6562:45;6603:2;6592:9;6588:18;6580:6;6562:45;:::i;6618:242::-;6706:6;6759:3;6747:9;6738:7;6734:23;6730:33;6727:53;;;6776:1;6773;6766:12;6727:53;6799:55;6846:7;6835:9;6799:55;:::i;6865:623::-;6962:6;7015:3;7003:9;6994:7;6990:23;6986:33;6983:53;;;7032:1;7029;7022:12;6983:53;7065:2;7059:9;7107:3;7099:6;7095:16;7177:6;7165:10;7162:22;7141:18;7129:10;7126:34;7123:62;7120:88;;;7188:18;;:::i;:::-;7228:10;7224:2;7217:22;;7269:9;7263:16;7255:6;7248:32;7334:2;7323:9;7319:18;7313:25;7308:2;7300:6;7296:15;7289:50;7393:2;7382:9;7378:18;7372:25;7367:2;7359:6;7355:15;7348:50;7452:2;7441:9;7437:18;7431:25;7426:2;7418:6;7414:15;7407:50;7476:6;7466:16;;;6865:623;;;;:::o;7493:936::-;7588:6;7619:2;7662;7650:9;7641:7;7637:23;7633:32;7630:52;;;7678:1;7675;7668:12;7630:52;7711:9;7705:16;7740:18;7781:2;7773:6;7770:14;7767:34;;;7797:1;7794;7787:12;7767:34;7835:6;7824:9;7820:22;7810:32;;7880:7;7873:4;7869:2;7865:13;7861:27;7851:55;;7902:1;7899;7892:12;7851:55;7931:2;7925:9;7953:2;7949;7946:10;7943:36;;;7959:18;;:::i;:::-;8005:2;8002:1;7998:10;7988:20;;8028:28;8052:2;8048;8044:11;8028:28;:::i;:::-;8090:15;;;8160:11;;;8156:20;;;8121:12;;;;8188:19;;;8185:39;;;8220:1;8217;8210:12;8185:39;8244:11;;;;8264:135;8280:6;8275:3;8272:15;8264:135;;;8346:10;;8334:23;;8297:12;;;;8377;;;;8264:135;;;8418:5;7493:936;-1:-1:-1;;;;;;;;7493:936:35:o;8897:335::-;9099:2;9081:21;;;9138:2;9118:18;;;9111:30;-1:-1:-1;;;9172:2:35;9157:18;;9150:41;9223:2;9208:18;;8897:335::o;9237:380::-;9316:1;9312:12;;;;9359;;;9380:61;;9434:4;9426:6;9422:17;9412:27;;9380:61;9487:2;9479:6;9476:14;9456:18;9453:38;9450:161;;9533:10;9528:3;9524:20;9521:1;9514:31;9568:4;9565:1;9558:15;9596:4;9593:1;9586:15;9747:840;9873:3;9902:1;9935:6;9929:13;9965:36;9991:9;9965:36;:::i;:::-;10020:1;10037:18;;;10064:133;;;;10211:1;10206:356;;;;10030:532;;10064:133;-1:-1:-1;;10097:24:35;;10085:37;;10170:14;;10163:22;10151:35;;10142:45;;;-1:-1:-1;10064:133:35;;10206:356;10237:6;10234:1;10227:17;10267:4;10312:2;10309:1;10299:16;10337:1;10351:165;10365:6;10362:1;10359:13;10351:165;;;10443:14;;10430:11;;;10423:35;10486:16;;;;10380:10;;10351:165;;;10355:3;;;10545:6;10540:3;10536:16;10529:23;;10030:532;-1:-1:-1;10578:3:35;;9747:840;-1:-1:-1;;;;;;9747:840:35:o;10592:184::-;10662:6;10715:2;10703:9;10694:7;10690:23;10686:32;10683:52;;;10731:1;10728;10721:12;10683:52;-1:-1:-1;10754:16:35;;10592:184;-1:-1:-1;10592:184:35:o;11034:127::-;11095:10;11090:3;11086:20;11083:1;11076:31;11126:4;11123:1;11116:15;11150:4;11147:1;11140:15;11166:232;11205:3;11226:17;;;11223:140;;11285:10;11280:3;11276:20;11273:1;11266:31;11320:4;11317:1;11310:15;11348:4;11345:1;11338:15;11223:140;-1:-1:-1;11390:1:35;11379:13;;11166:232::o;11682:334::-;11884:2;11866:21;;;11923:2;11903:18;;;11896:30;-1:-1:-1;;;11957:2:35;11942:18;;11935:40;12007:2;11992:18;;11682:334::o;12021:544::-;12122:2;12117:3;12114:11;12111:448;;;12158:1;12183:5;12179:2;12172:17;12228:4;12224:2;12214:19;12298:2;12286:10;12282:19;12279:1;12275:27;12269:4;12265:38;12334:4;12322:10;12319:20;12316:47;;;-1:-1:-1;12357:4:35;12316:47;12412:2;12407:3;12403:12;12400:1;12396:20;12390:4;12386:31;12376:41;;12467:82;12485:2;12478:5;12475:13;12467:82;;;12530:17;;;12511:1;12500:13;12467:82;;12111:448;12021:544;;;:::o;12741:1348::-;12865:3;12859:10;12892:18;12884:6;12881:30;12878:56;;;12914:18;;:::i;:::-;12943:96;13032:6;12992:38;13024:4;13018:11;12992:38;:::i;:::-;12986:4;12943:96;:::i;:::-;13094:4;;13158:2;13147:14;;13175:1;13170:662;;;;13876:1;13893:6;13890:89;;;-1:-1:-1;13945:19:35;;;13939:26;13890:89;-1:-1:-1;;12698:1:35;12694:11;;;12690:24;12686:29;12676:40;12722:1;12718:11;;;12673:57;13992:81;;13140:943;;13170:662;9694:1;9687:14;;;9731:4;9718:18;;-1:-1:-1;;13206:20:35;;;13323:236;13337:7;13334:1;13331:14;13323:236;;;13426:19;;;13420:26;13405:42;;13518:27;;;;13486:1;13474:14;;;;13353:19;;13323:236;;;13327:3;13587:6;13578:7;13575:19;13572:201;;;13648:19;;;13642:26;-1:-1:-1;;13731:1:35;13727:14;;;13743:3;13723:24;13719:37;13715:42;13700:58;13685:74;;13572:201;-1:-1:-1;;;;;13819:1:35;13803:14;;;13799:22;13786:36;;-1:-1:-1;12741:1348:35:o;14094:289::-;14269:6;14258:9;14251:25;14312:2;14307;14296:9;14292:18;14285:30;14232:4;14332:45;14373:2;14362:9;14358:18;14350:6;14332:45;:::i;14388:386::-;14620:1;14616;14611:3;14607:11;14603:19;14595:6;14591:32;14580:9;14573:51;14660:6;14655:2;14644:9;14640:18;14633:34;14703:2;14698;14687:9;14683:18;14676:30;14554:4;14723:45;14764:2;14753:9;14749:18;14741:6;14723:45;:::i;:::-;14715:53;14388:386;-1:-1:-1;;;;;14388:386:35:o;14779:277::-;14846:6;14899:2;14887:9;14878:7;14874:23;14870:32;14867:52;;;14915:1;14912;14905:12;14867:52;14947:9;14941:16;15000:5;14993:13;14986:21;14979:5;14976:32;14966:60;;15022:1;15019;15012:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue((int256,int256,int256,int256))": "cc6ae2bd",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue(uint256)": "0ff4c916",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set(uint256,(int256,int256,int256,int256))": "3a727344",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"width\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"height\",\"type\":\"int256\"}],\"internalType\":\"struct Collider\",\"name\":\"value\",\"type\":\"tuple\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"width\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"height\",\"type\":\"int256\"}],\"internalType\":\"struct Collider\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"indexer\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"width\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"height\",\"type\":\"int256\"}],\"internalType\":\"struct Collider\",\"name\":\"value\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getEntitiesWithValue(bytes)\":{\"params\":{\"value\":\"Abi-encoded value to get the list of entities with this value for.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"registerIndexer(address)\":{\"params\":{\"indexer\":\"Address of the indexer to notify when a component value is set.\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"Address of the new owner.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to this component to the given address. Can only be called by the owner of this component.\"},\"getEntities()\":{\"notice\":\"Get a list of all entities that have a value in this component.\"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Get a list of all entities that have the specified value in this component.\"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component.\"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"Get the owner of this component \"},\"registerIndexer(address)\":{\"notice\":\"Register a new indexer that gets notified when a component value is set.\"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership of this component to a new owner. Can only be called by the current owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Addresses with write access to this component \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SquareComponent.sol\":\"SquareComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@latticexyz/=lib/mud/node_modules/@latticexyz/solecs/src/\",\":@rari-capital/=lib/mud/node_modules/@rari-capital/solmate/src/\",\":ds-test/=lib/mud/node_modules/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/mud/node_modules/hardhat/\",\":memmove/=lib/mud/node_modules/memmove/src/\",\":mud/=lib/mud/packages/solecs/src/\",\":openzeppelin-solidity/=lib/mud/node_modules/openzeppelin-solidity/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/mud/node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"lib/mud/node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"lib/mud/packages/solecs/src/Component.sol\":{\"keccak256\":\"0x00b74ab0dba753d7929eb51cfd486693138402b6fb40561fd4fd27b657e6e9c1\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://c77e94c375ff6d54713d8cde581695ab08879f5b9918262300a029dd77587f60\",\"dweb:/ipfs/QmUPJYxV72n5mMgvPR6itQFJq5S8iqbDTm9Xn7HMK6KihA\"]},\"lib/mud/packages/solecs/src/LibTypes.sol\":{\"keccak256\":\"0x6e28306a3fd82d16ffaa780fd4f7dd50749cd7446c5250990855bd903b71bd8d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ebde66e846ec8ff4f5676410a5bcbcee4916ad28ad5f1b53c80ccad57cfa0266\",\"dweb:/ipfs/QmWqmukE1AthrjPNke9uqzSpNFKSzshbfircbQx3waiJeA\"]},\"lib/mud/packages/solecs/src/MapSet.sol\":{\"keccak256\":\"0x9bf5cd536c741f4ac730862fb49cd3d9527c7c62007b986ada5b0591859cb25c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://2da724933f2f22704131e39e27f64e83c214a0678b804358f822da31df4c3cf0\",\"dweb:/ipfs/QmYAbxx94WgpwWViMBmguH8UcDmcS2Mopv7tTB89Cdz1my\"]},\"lib/mud/packages/solecs/src/Set.sol\":{\"keccak256\":\"0x85eeb863a98ccdcc310bf14dd587f5cdfcda9ea7481ebbee03f48af8ad95be41\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://bc140420badafdd67133f9de39f67bf966d39df1dc5974ee5c940a1f2909c4aa\",\"dweb:/ipfs/Qmd7i89MFaqeK39JFbVopiZBatDQd3hCYwCi6XytDEi3rh\"]},\"lib/mud/packages/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc653b5afc93743ae8606604d4941d085f9f25dc9f1a068e9950944e03bb1a61a\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://dce85cd14551eb9008b05843dc3dba0243276c3e3e2f95c3a1dae2f20dd77e69\",\"dweb:/ipfs/QmViPLRuBdczDVJ96eFY2EbrDY5y1BP4igh9AfjodcMM1J\"]},\"lib/mud/packages/solecs/src/interfaces/IEntityContainer.sol\":{\"keccak256\":\"0x95ae0340082f859c0c31108323048c4d179a28df905ba8384f7ab8dd95d2d6a0\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://cbc49eba9e6b4eb603d2ae4189a83b8c9f0b858cd4236c94ebd23b8b06817378\",\"dweb:/ipfs/QmcTePiUxaua9NrUYWKPNMMPyaCxH1rMtniFkrSkTpwBak\"]},\"lib/mud/packages/solecs/src/interfaces/IEntityIndexer.sol\":{\"keccak256\":\"0xd6ca557fd8afe2f16679c67857affc55eb237dbc942a6390097122c65a19a52e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1ea4345f6064267ed8ab657c945407d3c172e019664fe8ecdd069b1b7b44684\",\"dweb:/ipfs/QmNPv69EEjhA6dv1nC7VHv4JMb35Aop3We52QB5CaAGheF\"]},\"lib/mud/packages/solecs/src/interfaces/IOwned.sol\":{\"keccak256\":\"0x14dd27a7fe1bdd1d17d814a40bab1886a6204ba3e45996f45cf8c6bd412e403b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b4a5677a2bcc9159d4a90b66af9a888e33ac3cf3eae08f0b8548e9510131ec82\",\"dweb:/ipfs/Qmdj7Jz274wP2KevSqdpFQc4msVi9jfkrNsQvCFoHNJcDG\"]},\"lib/mud/packages/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x8846ddb1701b59f8cbf80225ea8e85bd2991ab6ee0515c011d79a265f47f93fe\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://959ba1dcc93439c82e53a1e9858bac831a3c003eae82fc35edd931d7e7da4f77\",\"dweb:/ipfs/QmQu2vGG9bDpuTHYJNSW6aXCp4FYCVzew2XpjVjZm59CAx\"]},\"lib/mud/packages/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0xde47447df2e0f42b66a1c9ec6432ed30cad604de2b5eb673341abb772832be80\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://83bd8652b8531460cc580d6cd28fc8f0448ec9f032cd6581aee5298a4d0a12e9\",\"dweb:/ipfs/QmZsnaajiBVjcC6S8K39wdfnyZcH4B1FZYe2qL3p4iiwXD\"]},\"lib/mud/packages/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x3956cfb4b92afd3eccfea772480deb00ba573629bc0f36db5d948e2d168377cb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1aafe610e9283e1d7b1f45ba49cf77c8cf770241eeaa5317171df30b5f114c7d\",\"dweb:/ipfs/QmYShHHJqSfkdY3vcbKS18AuBpBmfwMUzebxZbPpgZDcfq\"]},\"src/SquareComponent.sol\":{\"keccak256\":\"0x01d647dc1600f343fc1a41f7cf828d80ea79c8c78d9064b770c1825c56db91e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0be4f7c4c782f5b01ece208c0e03f11cf19d8c609046d88a705a8444dcda9d7\",\"dweb:/ipfs/QmRoT2vH1YXB2ZZsXcRCN8UMpxktrQuEd6TS5XSwVTz8oQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Collider",
              "name": "value",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "x",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "y",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "width",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "height",
                  "type": "int256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct Collider",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "x",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "y",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "width",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "height",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "indexer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "struct Collider",
              "name": "value",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "x",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "y",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "width",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "height",
                  "type": "int256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getEntitiesWithValue(bytes)": {
            "params": {
              "value": "Abi-encoded value to get the list of entities with this value for."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "registerIndexer(address)": {
            "params": {
              "indexer": "Address of the indexer to notify when a component value is set."
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "newOwner": "Address of the new owner."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to this component to the given address. Can only be called by the owner of this component."
          },
          "getEntities()": {
            "notice": "Get a list of all entities that have a value in this component."
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Get a list of all entities that have the specified value in this component."
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component."
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "Get the owner of this component "
          },
          "registerIndexer(address)": {
            "notice": "Register a new indexer that gets notified when a component value is set."
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "Transfer ownership of this component to a new owner. Can only be called by the current owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Addresses with write access to this component "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=lib/mud/node_modules/@latticexyz/solecs/src/",
        ":@rari-capital/=lib/mud/node_modules/@rari-capital/solmate/src/",
        ":ds-test/=lib/mud/node_modules/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=lib/mud/node_modules/hardhat/",
        ":memmove/=lib/mud/node_modules/memmove/src/",
        ":mud/=lib/mud/packages/solecs/src/",
        ":openzeppelin-solidity/=lib/mud/node_modules/openzeppelin-solidity/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SquareComponent.sol": "SquareComponent"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/mud/node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "lib/mud/node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "lib/mud/packages/solecs/src/Component.sol": {
        "keccak256": "0x00b74ab0dba753d7929eb51cfd486693138402b6fb40561fd4fd27b657e6e9c1",
        "urls": [
          "bzz-raw://c77e94c375ff6d54713d8cde581695ab08879f5b9918262300a029dd77587f60",
          "dweb:/ipfs/QmUPJYxV72n5mMgvPR6itQFJq5S8iqbDTm9Xn7HMK6KihA"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/LibTypes.sol": {
        "keccak256": "0x6e28306a3fd82d16ffaa780fd4f7dd50749cd7446c5250990855bd903b71bd8d",
        "urls": [
          "bzz-raw://ebde66e846ec8ff4f5676410a5bcbcee4916ad28ad5f1b53c80ccad57cfa0266",
          "dweb:/ipfs/QmWqmukE1AthrjPNke9uqzSpNFKSzshbfircbQx3waiJeA"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/MapSet.sol": {
        "keccak256": "0x9bf5cd536c741f4ac730862fb49cd3d9527c7c62007b986ada5b0591859cb25c",
        "urls": [
          "bzz-raw://2da724933f2f22704131e39e27f64e83c214a0678b804358f822da31df4c3cf0",
          "dweb:/ipfs/QmYAbxx94WgpwWViMBmguH8UcDmcS2Mopv7tTB89Cdz1my"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/Set.sol": {
        "keccak256": "0x85eeb863a98ccdcc310bf14dd587f5cdfcda9ea7481ebbee03f48af8ad95be41",
        "urls": [
          "bzz-raw://bc140420badafdd67133f9de39f67bf966d39df1dc5974ee5c940a1f2909c4aa",
          "dweb:/ipfs/Qmd7i89MFaqeK39JFbVopiZBatDQd3hCYwCi6XytDEi3rh"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc653b5afc93743ae8606604d4941d085f9f25dc9f1a068e9950944e03bb1a61a",
        "urls": [
          "bzz-raw://dce85cd14551eb9008b05843dc3dba0243276c3e3e2f95c3a1dae2f20dd77e69",
          "dweb:/ipfs/QmViPLRuBdczDVJ96eFY2EbrDY5y1BP4igh9AfjodcMM1J"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IEntityContainer.sol": {
        "keccak256": "0x95ae0340082f859c0c31108323048c4d179a28df905ba8384f7ab8dd95d2d6a0",
        "urls": [
          "bzz-raw://cbc49eba9e6b4eb603d2ae4189a83b8c9f0b858cd4236c94ebd23b8b06817378",
          "dweb:/ipfs/QmcTePiUxaua9NrUYWKPNMMPyaCxH1rMtniFkrSkTpwBak"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IEntityIndexer.sol": {
        "keccak256": "0xd6ca557fd8afe2f16679c67857affc55eb237dbc942a6390097122c65a19a52e",
        "urls": [
          "bzz-raw://a1ea4345f6064267ed8ab657c945407d3c172e019664fe8ecdd069b1b7b44684",
          "dweb:/ipfs/QmNPv69EEjhA6dv1nC7VHv4JMb35Aop3We52QB5CaAGheF"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IOwned.sol": {
        "keccak256": "0x14dd27a7fe1bdd1d17d814a40bab1886a6204ba3e45996f45cf8c6bd412e403b",
        "urls": [
          "bzz-raw://b4a5677a2bcc9159d4a90b66af9a888e33ac3cf3eae08f0b8548e9510131ec82",
          "dweb:/ipfs/Qmdj7Jz274wP2KevSqdpFQc4msVi9jfkrNsQvCFoHNJcDG"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x8846ddb1701b59f8cbf80225ea8e85bd2991ab6ee0515c011d79a265f47f93fe",
        "urls": [
          "bzz-raw://959ba1dcc93439c82e53a1e9858bac831a3c003eae82fc35edd931d7e7da4f77",
          "dweb:/ipfs/QmQu2vGG9bDpuTHYJNSW6aXCp4FYCVzew2XpjVjZm59CAx"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0xde47447df2e0f42b66a1c9ec6432ed30cad604de2b5eb673341abb772832be80",
        "urls": [
          "bzz-raw://83bd8652b8531460cc580d6cd28fc8f0448ec9f032cd6581aee5298a4d0a12e9",
          "dweb:/ipfs/QmZsnaajiBVjcC6S8K39wdfnyZcH4B1FZYe2qL3p4iiwXD"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x3956cfb4b92afd3eccfea772480deb00ba573629bc0f36db5d948e2d168377cb",
        "urls": [
          "bzz-raw://1aafe610e9283e1d7b1f45ba49cf77c8cf770241eeaa5317171df30b5f114c7d",
          "dweb:/ipfs/QmYShHHJqSfkdY3vcbKS18AuBpBmfwMUzebxZbPpgZDcfq"
        ],
        "license": "Unlicense"
      },
      "src/SquareComponent.sol": {
        "keccak256": "0x01d647dc1600f343fc1a41f7cf828d80ea79c8c78d9064b770c1825c56db91e7",
        "urls": [
          "bzz-raw://e0be4f7c4c782f5b01ece208c0e03f11cf19d8c609046d88a705a8444dcda9d7",
          "dweb:/ipfs/QmRoT2vH1YXB2ZZsXcRCN8UMpxktrQuEd6TS5XSwVTz8oQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SquareComponent.sol",
    "id": 28483,
    "exportedSymbols": {
      "Collider": [
        28369
      ],
      "Component": [
        24262
      ],
      "ID": [
        28377
      ],
      "LibTypes": [
        25585
      ],
      "SquareComponent": [
        28482
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1091:32",
    "nodes": [
      {
        "id": 28357,
        "nodeType": "PragmaDirective",
        "src": "32:24:32",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28360,
        "nodeType": "ImportDirective",
        "src": "58:54:32",
        "absolutePath": "lib/mud/packages/solecs/src/Component.sol",
        "file": "mud/Component.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28483,
        "sourceUnit": 24263,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28358,
              "name": "Component",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24262,
              "src": "66:9:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 28359,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25585,
              "src": "77:8:32",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28369,
        "nodeType": "StructDefinition",
        "src": "114:84:32",
        "canonicalName": "Collider",
        "members": [
          {
            "constant": false,
            "id": 28362,
            "mutability": "mutable",
            "name": "x",
            "nameLocation": "143:1:32",
            "nodeType": "VariableDeclaration",
            "scope": 28369,
            "src": "136:8:32",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 28361,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "136:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28364,
            "mutability": "mutable",
            "name": "y",
            "nameLocation": "157:1:32",
            "nodeType": "VariableDeclaration",
            "scope": 28369,
            "src": "150:8:32",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 28363,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "150:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28366,
            "mutability": "mutable",
            "name": "width",
            "nameLocation": "171:5:32",
            "nodeType": "VariableDeclaration",
            "scope": 28369,
            "src": "164:12:32",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 28365,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "164:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28368,
            "mutability": "mutable",
            "name": "height",
            "nameLocation": "189:6:32",
            "nodeType": "VariableDeclaration",
            "scope": 28369,
            "src": "182:13:32",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 28367,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "182:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Collider",
        "nameLocation": "121:8:32",
        "scope": 28483,
        "visibility": "public"
      },
      {
        "id": 28377,
        "nodeType": "VariableDeclaration",
        "src": "200:68:32",
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "217:2:32",
        "scope": 28483,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 28370,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "200:7:32",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "6578616d706c652e636f6d706f6e656e742e537175617265",
                  "id": 28374,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "240:26:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6a7cc323a056ef9c1378d529556aaabce7ccad47d7a9f011ed1a41766f374ac7",
                    "typeString": "literal_string \"example.component.Square\""
                  },
                  "value": "example.component.Square"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6a7cc323a056ef9c1378d529556aaabce7ccad47d7a9f011ed1a41766f374ac7",
                    "typeString": "literal_string \"example.component.Square\""
                  }
                ],
                "id": 28373,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "230:9:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 28375,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "230:37:32",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 28372,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "222:7:32",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 28371,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "222:7:32",
              "typeDescriptions": {}
            }
          },
          "id": 28376,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "222:46:32",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 28482,
        "nodeType": "ContractDefinition",
        "src": "271:851:32",
        "nodes": [
          {
            "id": 28389,
            "nodeType": "FunctionDefinition",
            "src": "315:50:32",
            "body": {
              "id": 28388,
              "nodeType": "Block",
              "src": "363:2:32",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28384,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28381,
                    "src": "352:5:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 28385,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28377,
                    "src": "359:2:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 28386,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28383,
                  "name": "Component",
                  "nameLocations": [
                    "342:9:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24262,
                  "src": "342:9:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "342:20:32"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28381,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "335:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 28389,
                  "src": "327:13:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "326:15:32"
            },
            "returnParameters": {
              "id": 28387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:0:32"
            },
            "scope": 28482,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28406,
            "nodeType": "FunctionDefinition",
            "src": "371:108:32",
            "body": {
              "id": 28405,
              "nodeType": "Block",
              "src": "432:47:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28398,
                        "name": "entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28391,
                        "src": "446:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 28401,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28394,
                            "src": "465:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collider_$28369_calldata_ptr",
                              "typeString": "struct Collider calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Collider_$28369_calldata_ptr",
                              "typeString": "struct Collider calldata"
                            }
                          ],
                          "expression": {
                            "id": 28399,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "454:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 28400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "458:6:32",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "454:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 28402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "454:17:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 28397,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28406,
                        24105
                      ],
                      "referencedDeclaration": 24105,
                      "src": "442:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 28403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "442:30:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28404,
                  "nodeType": "ExpressionStatement",
                  "src": "442:30:32"
                }
              ]
            },
            "functionSelector": "3a727344",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "380:3:32",
            "parameters": {
              "id": 28395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28391,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "392:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 28406,
                  "src": "384:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28394,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "418:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 28406,
                  "src": "400:23:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collider_$28369_calldata_ptr",
                    "typeString": "struct Collider"
                  },
                  "typeName": {
                    "id": 28393,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28392,
                      "name": "Collider",
                      "nameLocations": [
                        "400:8:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28369,
                      "src": "400:8:32"
                    },
                    "referencedDeclaration": 28369,
                    "src": "400:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collider_$28369_storage_ptr",
                      "typeString": "struct Collider"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "383:41:32"
            },
            "returnParameters": {
              "id": 28396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:0:32"
            },
            "scope": 28482,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28424,
            "nodeType": "FunctionDefinition",
            "src": "485:139:32",
            "body": {
              "id": 28423,
              "nodeType": "Block",
              "src": "557:67:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28417,
                            "name": "entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28408,
                            "src": "597:6:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 28416,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24212,
                          "src": "585:11:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 28418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "585:19:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 28419,
                            "name": "Collider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28369,
                            "src": "607:8:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Collider_$28369_storage_ptr_$",
                              "typeString": "type(struct Collider storage pointer)"
                            }
                          }
                        ],
                        "id": 28420,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "606:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Collider_$28369_storage_ptr_$",
                          "typeString": "type(struct Collider storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Collider_$28369_storage_ptr_$",
                          "typeString": "type(struct Collider storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 28414,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "574:3:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 28415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "578:6:32",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "574:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 28421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "574:43:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collider_$28369_memory_ptr",
                      "typeString": "struct Collider memory"
                    }
                  },
                  "functionReturnParameters": 28413,
                  "id": 28422,
                  "nodeType": "Return",
                  "src": "567:50:32"
                }
              ]
            },
            "functionSelector": "0ff4c916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "494:8:32",
            "parameters": {
              "id": 28409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28408,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "511:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 28424,
                  "src": "503:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "502:16:32"
            },
            "returnParameters": {
              "id": 28413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28424,
                  "src": "540:15:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collider_$28369_memory_ptr",
                    "typeString": "struct Collider"
                  },
                  "typeName": {
                    "id": 28411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28410,
                      "name": "Collider",
                      "nameLocations": [
                        "540:8:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28369,
                      "src": "540:8:32"
                    },
                    "referencedDeclaration": 28369,
                    "src": "540:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collider_$28369_storage_ptr",
                      "typeString": "struct Collider"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "539:17:32"
            },
            "scope": 28482,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28441,
            "nodeType": "FunctionDefinition",
            "src": "630:185:32",
            "body": {
              "id": 28440,
              "nodeType": "Block",
              "src": "752:63:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 28436,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28427,
                            "src": "801:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Collider_$28369_calldata_ptr",
                              "typeString": "struct Collider calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Collider_$28369_calldata_ptr",
                              "typeString": "struct Collider calldata"
                            }
                          ],
                          "expression": {
                            "id": 28434,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "790:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 28435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "794:6:32",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "790:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 28437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "790:17:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 28433,
                      "name": "getEntitiesWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        28441,
                        24244
                      ],
                      "referencedDeclaration": 24244,
                      "src": "769:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (uint256[] memory)"
                      }
                    },
                    "id": 28438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "769:39:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 28432,
                  "id": 28439,
                  "nodeType": "Return",
                  "src": "762:46:32"
                }
              ]
            },
            "functionSelector": "cc6ae2bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitiesWithValue",
            "nameLocation": "639:20:32",
            "parameters": {
              "id": 28428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28427,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "678:5:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 28441,
                  "src": "660:23:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Collider_$28369_calldata_ptr",
                    "typeString": "struct Collider"
                  },
                  "typeName": {
                    "id": 28426,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28425,
                      "name": "Collider",
                      "nameLocations": [
                        "660:8:32"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28369,
                      "src": "660:8:32"
                    },
                    "referencedDeclaration": 28369,
                    "src": "660:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Collider_$28369_storage_ptr",
                      "typeString": "struct Collider"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "659:25:32"
            },
            "returnParameters": {
              "id": 28432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28431,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28441,
                  "src": "730:16:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28429,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "730:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28430,
                    "nodeType": "ArrayTypeName",
                    "src": "730:9:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "729:18:32"
            },
            "scope": 28482,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28481,
            "nodeType": "FunctionDefinition",
            "src": "821:299:32",
            "body": {
              "id": 28480,
              "nodeType": "Block",
              "src": "968:152:32",
              "statements": [
                {
                  "expression": {
                    "id": 28456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28452,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28446,
                        "src": "978:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 28454,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 28453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "983:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "978:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "78",
                      "id": 28455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "988:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                        "typeString": "literal_string \"x\""
                      },
                      "value": "x"
                    },
                    "src": "978:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 28457,
                  "nodeType": "ExpressionStatement",
                  "src": "978:13:32"
                },
                {
                  "expression": {
                    "id": 28464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28458,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28450,
                        "src": "1001:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$25584_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 28460,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 28459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1008:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1001:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 28461,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25585,
                          "src": "1013:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$25585_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 28462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1022:11:32",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25584,
                        "src": "1013:20:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$25584_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 28463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1034:6:32",
                      "memberName": "INT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25558,
                      "src": "1013:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1001:39:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$25584",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 28465,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:39:32"
                },
                {
                  "expression": {
                    "id": 28470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28466,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28446,
                        "src": "1051:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 28468,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 28467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1056:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1051:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "79",
                      "id": 28469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1061:3:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                        "typeString": "literal_string \"y\""
                      },
                      "value": "y"
                    },
                    "src": "1051:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 28471,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:13:32"
                },
                {
                  "expression": {
                    "id": 28478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28472,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28450,
                        "src": "1074:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$25584_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 28474,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 28473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1081:1:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1074:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 28475,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25585,
                          "src": "1086:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$25585_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 28476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1095:11:32",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25584,
                        "src": "1086:20:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$25584_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 28477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1107:6:32",
                      "memberName": "INT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25558,
                      "src": "1086:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1074:39:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$25584",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 28479,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:39:32"
                }
              ]
            },
            "baseFunctions": [
              24023
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "830:9:32",
            "overrides": {
              "id": 28443,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "878:8:32"
            },
            "parameters": {
              "id": 28442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:32"
            },
            "returnParameters": {
              "id": 28451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28446,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "920:4:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 28481,
                  "src": "904:20:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28444,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "904:6:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 28445,
                    "nodeType": "ArrayTypeName",
                    "src": "904:8:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28450,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "956:6:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 28481,
                  "src": "926:36:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$25584_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28448,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 28447,
                        "name": "LibTypes.SchemaValue",
                        "nameLocations": [
                          "926:8:32",
                          "935:11:32"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25584,
                        "src": "926:20:32"
                      },
                      "referencedDeclaration": 25584,
                      "src": "926:20:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 28449,
                    "nodeType": "ArrayTypeName",
                    "src": "926:22:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$25584_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "903:60:32"
            },
            "scope": 28482,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28378,
              "name": "Component",
              "nameLocations": [
                "299:9:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24262,
              "src": "299:9:32"
            },
            "id": 28379,
            "nodeType": "InheritanceSpecifier",
            "src": "299:9:32"
          }
        ],
        "canonicalName": "SquareComponent",
        "contractDependencies": [
          25772,
          25905
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28482,
          24262,
          26637,
          26688
        ],
        "name": "SquareComponent",
        "nameLocation": "280:15:32",
        "scope": 28483,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 32
}