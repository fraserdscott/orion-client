{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "x",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "internalType": "struct Coord",
          "name": "value",
          "type": "tuple"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int256",
              "name": "x",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "internalType": "struct Coord",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "indexer",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "x",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "internalType": "struct Coord",
          "name": "value",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "267:841:30:-:0;;;313:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;350:5;224:39;216:48;;1579:9:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1568:8:9;:20;;-1:-1:-1;;;;;;1568:20:9;-1:-1:-1;;;;;1568:20:9;;;;;;;;;;1612:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1594:15:9;:30;;-1:-1:-1;;;;;;1594:30:9;;;-1:-1:-1;;;;;1594:30:9;;;;;;;-1:-1:-1;1630:19:9;;1639:10;1630:19;;;;;;-1:-1:-1;1655:23:9;;;:11;:23;;;;;;:30;;-1:-1:-1;;1655:30:9;;;;;;1691:2;:8;;;1709:20;;;1705:47;;1731:21;1745:6;1731:13;:21::i;:::-;1521:236;;313:50:30;267:841;;2625:137:9;1871:6;;-1:-1:-1;;;;;1871:6:9;1857:10;:20;1849:43;;;;-1:-1:-1;;;1849:43:9;;511:2:35;1849:43:9;;;493:21:35;550:2;530:18;;;523:30;-1:-1:-1;;;569:18:35;;;562:40;619:18;;1849:43:9;;;;;;;;2687:5:::1;:14:::0;;-1:-1:-1;;;;;;2687:14:9::1;-1:-1:-1::0;;;;;2687:14:9;::::1;::::0;;::::1;::::0;;;2754:2:::1;::::0;2707:50:::1;::::0;-1:-1:-1;;;2707:50:9;;2747:4:::1;2707:50;::::0;::::1;822:51:35::0;889:18;;;882:34;;;;2707:31:9::1;::::0;795:18:35;;2707:50:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2625:137:::0;:::o;267:841:30:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:290:35:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:35;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:35:o;648:274::-;267:841:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638b282947116100a2578063b361be4611610071578063b361be4614610273578063b8bc073d14610286578063cccf7a8e146102a6578063cd1b72c4146102b9578063f2fde38b146102cc57600080fd5b80638b282947146102255780638da5cb5b146102385780639d2c76b414610249578063af640d0f1461025c57600080fd5b80634fef6a38116100e95780634fef6a38146101a35780636996cb07146101b65780636b122fe0146101c957806375c0669c146101df578063861eb905146101f257600080fd5b80630ff4c9161461011b57806330b67baa1461014e57806331b933b9146101795780634cc822151461018e575b600080fd5b61012e610129366004610e1a565b6102df565b604080518251815260209283015192810192909252015b60405180910390f35b600054610161906001600160a01b031681565b6040516001600160a01b039091168152602001610145565b610181610315565b6040516101459190610e33565b6101a161019c366004610e1a565b61038c565b005b6101a16101b1366004610e77565b610661565b6101816101c4366004610ebf565b6106af565b6101d16106eb565b604051610145929190610f37565b6101a16101ed366004610e77565b6107eb565b610215610200366004610e77565b60026020526000908152604090205460ff1681565b6040519015158152602001610145565b6101a16102333660046110a6565b61086c565b6001546001600160a01b0316610161565b6101a1610257366004610e77565b610b1a565b61026560075481565b604051908152602001610145565b6101816102813660046110ed565b610b8e565b610299610294366004610e1a565b610c08565b604051610145919061112a565b6102156102b4366004610e1a565b610caa565b6101a16102c736600461113d565b610d18565b6101a16102da366004610e77565b610d57565b60408051808201909152600080825260208201526102fc82610c08565b80602001905181019061030f919061116a565b92915050565b60035460408051631043567360e21b815290516060926001600160a01b03169163410d59cc9160048083019260009291908290030181865afa15801561035f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261038791908101906111b9565b905090565b3360009081526002602052604090205460ff166103c45760405162461bcd60e51b81526004016103bb9061125f565b60405180910390fd5b6005546000828152600460205260409081902090516001600160a01b03909216916385edea13916103f4916112b8565b60405190819003812060e083901b6001600160e01b03191682526004820152602401602060405180830381865afa158015610433573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610457919061132e565b1561065e576005546000828152600460205260409081902090516001600160a01b0390921691636526db7a9161048c916112b8565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101849052604401600060405180830381600087803b1580156104cf57600080fd5b505af11580156104e3573d6000803e3d6000fd5b5050600354604051634cc8221560e01b8152600481018590526001600160a01b039091169250634cc822159150602401600060405180830381600087803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b505050600082815260046020526040812061055d925090610dcc565b60005b6006548110156105f7576006818154811061057d5761057d611347565b600091825260209091200154604051634cc8221560e01b8152600481018490526001600160a01b0390911690634cc8221590602401600060405180830381600087803b1580156105cc57600080fd5b505af11580156105e0573d6000803e3d6000fd5b5050505080806105ef9061135d565b915050610560565b50600054604051636c01832560e11b8152306004820152602481018390526001600160a01b039091169063d803064a906044015b600060405180830381600087803b15801561064557600080fd5b505af1158015610659573d6000803e3d6000fd5b505050505b50565b6001546001600160a01b0316331461068b5760405162461bcd60e51b81526004016103bb90611384565b6001600160a01b03166000908152600260205260409020805460ff19166001179055565b606061030f826040516020016106d79190813581526020918201359181019190915260400190565b604051602081830303815290604052610b8e565b606080604051806040016040528060018152602001600f60fb1b8152508260008151811061071b5761071b611347565b602002602001018190525060068160008151811061073b5761073b611347565b6020026020010190601f81111561075457610754610f21565b9081601f81111561076757610767610f21565b81525050604051806040016040528060018152602001607960f81b8152508260018151811061079857610798611347565b60200260200101819052506006816001815181106107b8576107b8611347565b6020026020010190601f8111156107d1576107d1610f21565b9081601f8111156107e4576107e4610f21565b9052509091565b3360009081526002602052604090205460ff1661081a5760405162461bcd60e51b81526004016103bb9061125f565b600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526002602052604090205460ff1661089b5760405162461bcd60e51b81526004016103bb9061125f565b600354604051630801f16960e11b8152600481018490526001600160a01b0390911690631003e2d290602401600060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b50506005546000858152600460205260409081902090516001600160a01b039092169350636526db7a9250610929916112b8565b60405190819003812060e083901b6001600160e01b0319168252600482015260248101859052604401600060405180830381600087803b15801561096c57600080fd5b505af1158015610980573d6000803e3d6000fd5b5050506000838152600460205260409020905061099d82826113f3565b506005548151602083012060405163771602f760e01b81526001600160a01b039092169163771602f7916109de918690600401918252602082015260400190565b600060405180830381600087803b1580156109f857600080fd5b505af1158015610a0c573d6000803e3d6000fd5b5050505060005b600654811015610aaf5760068181548110610a3057610a30611347565b6000918252602090912001546040516242d70760e31b81526001600160a01b0390911690630216b83890610a6a90869086906004016114b3565b600060405180830381600087803b158015610a8457600080fd5b505af1158015610a98573d6000803e3d6000fd5b505050508080610aa79061135d565b915050610a13565b506000546040516302bc413960e61b81526001600160a01b039091169063af104e4090610ae4903090869086906004016114cc565b600060405180830381600087803b158015610afe57600080fd5b505af1158015610b12573d6000803e3d6000fd5b505050505050565b6001546001600160a01b03163314610b445760405162461bcd60e51b81526004016103bb90611384565b600080546001600160a01b0319166001600160a01b038316908117909155600754604051630f30347760e41b8152306004820152602481019190915263f30347709060440161062b565b60055481516020830120604051631e5b17a560e21b815260048101919091526060916001600160a01b03169063796c5e9490602401600060405180830381865afa158015610be0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261030f91908101906111b9565b6000818152600460205260409020805460609190610c2590611284565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5190611284565b8015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b50505050509050919050565b600354604051636667bd4760e11b8152600481018390526000916001600160a01b03169063cccf7a8e90602401602060405180830381865afa158015610cf4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f91906114fc565b610d538282604051602001610d3f9190813581526020918201359181019190915260400190565b60405160208183030381529060405261086c565b5050565b6001546001600160a01b03163314610d815760405162461bcd60e51b81526004016103bb90611384565b33600090815260026020526040808220805460ff19908116909155600180546001600160a01b0319166001600160a01b03959095169485178155938352912080549091169091179055565b508054610dd890611284565b6000825580601f10610de8575050565b601f01602090049060005260206000209081019061065e91905b80821115610e165760008155600101610e02565b5090565b600060208284031215610e2c57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610e6b57835183529284019291840191600101610e4f565b50909695505050505050565b600060208284031215610e8957600080fd5b81356001600160a01b0381168114610ea057600080fd5b9392505050565b600060408284031215610eb957600080fd5b50919050565b600060408284031215610ed157600080fd5b610ea08383610ea7565b6000815180845260005b81811015610f0157602081850181015186830182015201610ee5565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015610f8e57605f19888703018552610f7c868351610edb565b95509382019390820190600101610f60565b50508584038187015286518085528782019482019350915060005b82811015610fe2578451828110610fd057634e487b7160e01b600052602160045260246000fd5b84529381019392810192600101610fa9565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561102e5761102e610fef565b604052919050565b600082601f83011261104757600080fd5b813567ffffffffffffffff81111561106157611061610fef565b611074601f8201601f1916602001611005565b81815284602083860101111561108957600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156110b957600080fd5b82359150602083013567ffffffffffffffff8111156110d757600080fd5b6110e385828601611036565b9150509250929050565b6000602082840312156110ff57600080fd5b813567ffffffffffffffff81111561111657600080fd5b61112284828501611036565b949350505050565b602081526000610ea06020830184610edb565b6000806060838503121561115057600080fd5b823591506111618460208501610ea7565b90509250929050565b60006040828403121561117c57600080fd5b6040516040810181811067ffffffffffffffff8211171561119f5761119f610fef565b604052825181526020928301519281019290925250919050565b600060208083850312156111cc57600080fd5b825167ffffffffffffffff808211156111e457600080fd5b818501915085601f8301126111f857600080fd5b81518181111561120a5761120a610fef565b8060051b915061121b848301611005565b818152918301840191848101908884111561123557600080fd5b938501935b838510156112535784518252938501939085019061123a565b98975050505050505050565b6020808252600b908201526a27a7262cafaba924aa22a960a91b604082015260600190565b600181811c9082168061129857607f821691505b602082108103610eb957634e487b7160e01b600052602260045260246000fd5b60008083546112c681611284565b600182811680156112de57600181146112f357611322565b60ff1984168752821515830287019450611322565b8760005260208060002060005b858110156113195781548a820152908401908201611300565b50505082870194505b50929695505050505050565b60006020828403121561134057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161137d57634e487b7160e01b600052601160045260246000fd5b5060010190565b6020808252600a908201526927a7262cafa7aba722a960b11b604082015260600190565b601f8211156113ee57600081815260208120601f850160051c810160208610156113cf5750805b601f850160051c820191505b81811015610b12578281556001016113db565b505050565b815167ffffffffffffffff81111561140d5761140d610fef565b6114218161141b8454611284565b846113a8565b602080601f831160018114611456576000841561143e5750858301515b600019600386901b1c1916600185901b178555610b12565b600085815260208120601f198616915b8281101561148557888601518255948401946001909101908401611466565b50858210156114a35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006111226040830184610edb565b60018060a01b03841681528260208201526060604082015260006114f36060830184610edb565b95945050505050565b60006020828403121561150e57600080fd5b81518015158114610ea057600080fdfea26469706673582212204e725ad747deeb4440309df7a1401f8039af6b79af95a9deafaa2f27d245709a64736f6c63430008100033",
    "sourceMap": "267:841:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:133;;;;;;:::i;:::-;;:::i;:::-;;;;411:13:35;;393:32;;481:4;469:17;;;463:24;441:20;;;434:54;;;;366:18;480:133:30;;;;;;;;821:20:9;;;;;-1:-1:-1;;;;;821:20:9;;;;;;-1:-1:-1;;;;;663:32:35;;;645:51;;633:2;618:18;821:20:9;499:203:35;5770:99:9;;;:::i;:::-;;;;;;;:::i;4443:668::-;;;;;;:::i;:::-;;:::i;:::-;;2951:95;;;;;;:::i;:::-;;:::i;619:182:30:-;;;;;;:::i;:::-;;:::i;807:299::-;;;:::i;:::-;;;;;;;;:::i;6440:111:9:-;;;;;;:::i;:::-;;:::i;1015:43::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4309:14:35;;4302:22;4284:41;;4272:2;4257:18;1015:43:9;4144:187:35;3539:658:9;;;;;;:::i;:::-;;:::i;2111:71::-;2171:6;;-1:-1:-1;;;;;2171:6:9;2111:71;;2625:137;;;;;;:::i;:::-;;:::i;1499:17::-;;;;;;;;;5822:25:35;;;5810:2;5795:18;1499:17:9;5676:177:35;6051:211:9;;;;;;:::i;:::-;;:::i;5531:154::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5275:94::-;;;;;;:::i;:::-;;:::i;369:105:30:-;;;;;;:::i;:::-;;:::i;2349:161:9:-;;;;;;:::i;:::-;;:::i;480:133:30:-;-1:-1:-1;;;;;;;;;;;;;;;;;577:19:30;589:6;577:11;:19::i;:::-;566:40;;;;;;;;;;;;:::i;:::-;559:47;480:133;-1:-1:-1;;480:133:30:o;5770:99:9:-;5845:8;;:19;;;-1:-1:-1;;;5845:19:9;;;;5814:16;;-1:-1:-1;;;;;5845:8:9;;:17;;:19;;;;;:8;;:19;;;;;;;:8;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5845:19:9;;;;;;;;;;;;:::i;:::-;5838:26;;5770:99;:::o;4443:668::-;2027:10;2015:23;;;;:11;:23;;;;;;;;2007:47;;;;-1:-1:-1;;;2007:47:9;;;;;;;:::i;:::-;;;;;;;;;4556:15:::1;::::0;::::1;4595:21:::0;;;:13:::1;:21;::::0;;;;;;4585:32;;-1:-1:-1;;;;;4556:15:9;;::::1;::::0;:20:::1;::::0;4585:32:::1;::::0;::::1;:::i;:::-;;::::0;;;;::::1;::::0;;4556:63:::1;::::0;;;-1:-1:-1;;;;;;4556:63:9;;;::::1;::::0;::::1;5822:25:35::0;5795:18;;4556:63:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4552:81:::0;4626:7:::1;4552:81;4689:15;::::0;::::1;4730:21:::0;;;:13:::1;:21;::::0;;;;;;4720:32;;-1:-1:-1;;;;;4689:15:9;;::::1;::::0;:22:::1;::::0;4720:32:::1;::::0;::::1;:::i;:::-;;::::0;;;;::::1;::::0;;4689:73:::1;::::0;;;-1:-1:-1;;;;;;4689:73:9;;;::::1;::::0;::::1;10218:25:35::0;10259:18;;;10252:34;;;10191:18;;4689:73:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4815:8:9::1;::::0;:23:::1;::::0;-1:-1:-1;;;4815:23:9;;::::1;::::0;::::1;5822:25:35::0;;;-1:-1:-1;;;;;4815:8:9;;::::1;::::0;-1:-1:-1;4815:15:9::1;::::0;-1:-1:-1;5795:18:35;;4815:23:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;4894:21:9::1;::::0;;;:13:::1;:21;::::0;;;;4887:28:::1;::::0;-1:-1:-1;4894:21:9;4887:28:::1;:::i;:::-;4927:9;4922:87;4946:8;:15:::0;4942:19;::::1;4922:87;;;4976:8;4985:1;4976:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;:26:::1;::::0;-1:-1:-1;;;4976:26:9;;::::1;::::0;::::1;5822:25:35::0;;;-1:-1:-1;;;;;4976:11:9;;::::1;::::0;:18:::1;::::0;5795::35;;4976:26:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4963:3;;;;;:::i;:::-;;;;4922:87;;;-1:-1:-1::0;5047:5:9::1;::::0;5040:66:::1;::::0;-1:-1:-1;;;5040:66:9;;5092:4:::1;5040:66;::::0;::::1;10840:51:35::0;10907:18;;;10900:34;;;-1:-1:-1;;;;;5047:5:9;;::::1;::::0;5040:43:::1;::::0;10813:18:35;;5040:66:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2060:1;4443:668:::0;:::o;2951:95::-;1871:6;;-1:-1:-1;;;;;1871:6:9;1857:10;:20;1849:43;;;;-1:-1:-1;;;1849:43:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;3015:19:9::1;;::::0;;;:11:::1;:19;::::0;;;;:26;;-1:-1:-1;;3015:26:9::1;3037:4;3015:26;::::0;;2951:95::o;619:182:30:-;716:16;755:39;787:5;776:17;;;;;;;11498:20:35;;11480:39;;11582:4;11570:17;;;11557:31;11535:20;;;11528:61;;;;11468:2;11453:18;;11284:311;776:17:30;;;;;;;;;;;;;755:20;:39::i;807:299::-;890:20;912:36;964:13;;;;;;;;;;;;;-1:-1:-1;;;964:13:30;;;:4;969:1;964:7;;;;;;;;:::i;:::-;;;;;;:13;;;;999:27;987:6;994:1;987:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1037:13;;;;;;;;;;;;;-1:-1:-1;;;1037:13:30;;;:4;1042:1;1037:7;;;;;;;;:::i;:::-;;;;;;:13;;;;1072:27;1060:6;1067:1;1060:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;807:299:30;;:::o;6440:111:9:-;2027:10;2015:23;;;;:11;:23;;;;;;;;2007:47;;;;-1:-1:-1;;;2007:47:9;;;;;;;:::i;:::-;6508:8:::1;:38:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;6508:38:9;;;;;::::1;::::0;;-1:-1:-1;;;;;;6508:38:9::1;-1:-1:-1::0;;;;;6508:38:9;;;::::1;::::0;;;::::1;::::0;;6440:111::o;3539:658::-;2027:10;2015:23;;;;:11;:23;;;;;;;;2007:47;;;;-1:-1:-1;;;2007:47:9;;;;;;;:::i;:::-;3636:8:::1;::::0;:20:::1;::::0;-1:-1:-1;;;3636:20:9;;::::1;::::0;::::1;5822:25:35::0;;;-1:-1:-1;;;;;3636:8:9;;::::1;::::0;:12:::1;::::0;5795:18:35;;3636:20:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3739:15:9::1;::::0;::::1;3780:21:::0;;;:13:::1;:21;::::0;;;;;;3770:32;;-1:-1:-1;;;;;3739:15:9;;::::1;::::0;-1:-1:-1;3739:22:9::1;::::0;-1:-1:-1;3770:32:9::1;::::0;::::1;:::i;:::-;;::::0;;;;::::1;::::0;;3739:73:::1;::::0;;;-1:-1:-1;;;;;;3739:73:9;;;::::1;::::0;::::1;10218:25:35::0;10259:18;;;10252:34;;;10191:18;;3739:73:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;3852:21:9::1;::::0;;;:13:::1;:21;::::0;;;;;-1:-1:-1;3852:29:9::1;3876:5:::0;3852:21;:29:::1;:::i;:::-;-1:-1:-1::0;3937:15:9::1;::::0;3965:16;;::::1;::::0;::::1;::::0;3937:54:::1;::::0;-1:-1:-1;;;3937:54:9;;-1:-1:-1;;;;;3937:15:9;;::::1;::::0;:19:::1;::::0;:54:::1;::::0;3984:6;;3937:54:::1;;10218:25:35::0;;;10274:2;10259:18;;10252:34;10206:2;10191:18;;10044:248;3937:54:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4003:9;3998:94;4022:8;:15:::0;4018:19;::::1;3998:94;;;4052:8;4061:1;4052:11;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;:33:::1;::::0;-1:-1:-1;;;4052:33:9;;-1:-1:-1;;;;;4052:11:9;;::::1;::::0;:18:::1;::::0;:33:::1;::::0;4071:6;;4079:5;;4052:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4039:3;;;;;:::i;:::-;;;;3998:94;;;-1:-1:-1::0;4130:5:9::1;::::0;4123:69:::1;::::0;-1:-1:-1;;;4123:69:9;;-1:-1:-1;;;;;4130:5:9;;::::1;::::0;4123:39:::1;::::0;:69:::1;::::0;4171:4:::1;::::0;4178:6;;4186:5;;4123:69:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3539:658:::0;;:::o;2625:137::-;1871:6;;-1:-1:-1;;;;;1871:6:9;1857:10;:20;1849:43;;;;-1:-1:-1;;;1849:43:9;;;;;;;:::i;:::-;2687:5:::1;:14:::0;;-1:-1:-1;;;;;;2687:14:9::1;-1:-1:-1::0;;;;;2687:14:9;::::1;::::0;;::::1;::::0;;;2754:2:::1;::::0;2707:50:::1;::::0;-1:-1:-1;;;2707:50:9;;2747:4:::1;2707:50;::::0;::::1;10840:51:35::0;10907:18;;;10900:34;;;;2707:31:9::1;::::0;10813:18:35;;2707:50:9::1;10666:274:35::0;6051:211:9;6206:15;;6239:16;;;;;;6206:51;;-1:-1:-1;;;6206:51:9;;;;;5822:25:35;;;;6122:16:9;;-1:-1:-1;;;;;6206:15:9;;:24;;5795:18:35;;6206:51:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6206:51:9;;;;;;;;;;;;:::i;5531:154::-;5659:21;;;;:13;:21;;;;;5652:28;;5589:12;;5659:21;5652:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5531:154;;;:::o;5275:94::-;5344:8;;:20;;-1:-1:-1;;;5344:20:9;;;;;5822:25:35;;;5325:4:9;;-1:-1:-1;;;;;5344:8:9;;:12;;5795:18:35;;5344:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;369:105:30:-;437:30;441:6;460:5;449:17;;;;;;;11498:20:35;;11480:39;;11582:4;11570:17;;;11557:31;11535:20;;;11528:61;;;;11468:2;11453:18;;11284:311;449:17:30;;;;;;;;;;;;;437:3;:30::i;:::-;369:105;;:::o;2349:161:9:-;1871:6;;-1:-1:-1;;;;;1871:6:9;1857:10;:20;1849:43;;;;-1:-1:-1;;;1849:43:9;;;;;;;:::i;:::-;2429:10:::1;2443:5;2417:23:::0;;;:11:::1;:23;::::0;;;;;:31;;-1:-1:-1;;2417:31:9;;::::1;::::0;;;-1:-1:-1;2454:17:9;;-1:-1:-1;;;;;;2454:17:9::1;-1:-1:-1::0;;;;;2454:17:9;;;::::1;::::0;;::::1;::::0;;2477:21;;;;;:28;;;;::::1;::::0;;::::1;::::0;;2349:161::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:180:35:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:35;;14:180;-1:-1:-1;14:180:35:o;707:632::-;878:2;930:21;;;1000:13;;903:18;;;1022:22;;;849:4;;878:2;1101:15;;;;1075:2;1060:18;;;849:4;1144:169;1158:6;1155:1;1152:13;1144:169;;;1219:13;;1207:26;;1288:15;;;;1253:12;;;;1180:1;1173:9;1144:169;;;-1:-1:-1;1330:3:35;;707:632;-1:-1:-1;;;;;;707:632:35:o;1344:286::-;1403:6;1456:2;1444:9;1435:7;1431:23;1427:32;1424:52;;;1472:1;1469;1462:12;1424:52;1498:23;;-1:-1:-1;;;;;1550:31:35;;1540:42;;1530:70;;1596:1;1593;1586:12;1530:70;1619:5;1344:286;-1:-1:-1;;;1344:286:35:o;1635:153::-;1693:5;1738:2;1729:6;1724:3;1720:16;1716:25;1713:45;;;1754:1;1751;1744:12;1713:45;-1:-1:-1;1776:6:35;1635:153;-1:-1:-1;1635:153:35:o;1793:235::-;1878:6;1931:2;1919:9;1910:7;1906:23;1902:32;1899:52;;;1947:1;1944;1937:12;1899:52;1970;2014:7;2003:9;1970:52;:::i;2033:423::-;2075:3;2113:5;2107:12;2140:6;2135:3;2128:19;2165:1;2175:162;2189:6;2186:1;2183:13;2175:162;;;2251:4;2307:13;;;2303:22;;2297:29;2279:11;;;2275:20;;2268:59;2204:12;2175:162;;;2179:3;2382:1;2375:4;2366:6;2361:3;2357:16;2353:27;2346:38;2445:4;2438:2;2434:7;2429:2;2421:6;2417:15;2413:29;2408:3;2404:39;2400:50;2393:57;;;2033:423;;;;:::o;2461:127::-;2522:10;2517:3;2513:20;2510:1;2503:31;2553:4;2550:1;2543:15;2577:4;2574:1;2567:15;2593:1546;2848:4;2896:2;2885:9;2881:18;2926:2;2915:9;2908:21;2949:6;2984;2978:13;3015:6;3007;3000:22;3053:2;3042:9;3038:18;3031:25;;3115:2;3105:6;3102:1;3098:14;3087:9;3083:30;3079:39;3065:53;;3137:4;3176:2;3168:6;3164:15;3197:1;3207:255;3221:6;3218:1;3215:13;3207:255;;;3314:2;3310:7;3298:9;3290:6;3286:22;3282:36;3277:3;3270:49;3342:40;3375:6;3366;3360:13;3342:40;:::i;:::-;3332:50;-1:-1:-1;3440:12:35;;;;3405:15;;;;3243:1;3236:9;3207:255;;;-1:-1:-1;;3498:22:35;;;3478:18;;;3471:50;3574:13;;3596:24;;;3678:15;;;;3638;;;-1:-1:-1;3574:13:35;-1:-1:-1;3713:1:35;3723:388;3739:8;3734:3;3731:17;3723:388;;;3810:8;3804:15;3849:2;3845;3842:10;3832:161;;3903:10;3898:3;3894:20;3891:1;3884:31;3942:4;3939:1;3932:15;3974:4;3971:1;3964:15;3832:161;4006:17;;4084;;;;4045:14;;;;3767:1;3758:11;3723:388;;;-1:-1:-1;4128:5:35;;2593:1546;-1:-1:-1;;;;;;;2593:1546:35:o;4336:127::-;4397:10;4392:3;4388:20;4385:1;4378:31;4428:4;4425:1;4418:15;4452:4;4449:1;4442:15;4468:275;4539:2;4533:9;4604:2;4585:13;;-1:-1:-1;;4581:27:35;4569:40;;4639:18;4624:34;;4660:22;;;4621:62;4618:88;;;4686:18;;:::i;:::-;4722:2;4715:22;4468:275;;-1:-1:-1;4468:275:35:o;4748:530::-;4790:5;4843:3;4836:4;4828:6;4824:17;4820:27;4810:55;;4861:1;4858;4851:12;4810:55;4897:6;4884:20;4923:18;4919:2;4916:26;4913:52;;;4945:18;;:::i;:::-;4989:55;5032:2;5013:13;;-1:-1:-1;;5009:27:35;5038:4;5005:38;4989:55;:::i;:::-;5069:2;5060:7;5053:19;5115:3;5108:4;5103:2;5095:6;5091:15;5087:26;5084:35;5081:55;;;5132:1;5129;5122:12;5081:55;5197:2;5190:4;5182:6;5178:17;5171:4;5162:7;5158:18;5145:55;5245:1;5220:16;;;5238:4;5216:27;5209:38;;;;5224:7;4748:530;-1:-1:-1;;;4748:530:35:o;5283:388::-;5360:6;5368;5421:2;5409:9;5400:7;5396:23;5392:32;5389:52;;;5437:1;5434;5427:12;5389:52;5473:9;5460:23;5450:33;;5534:2;5523:9;5519:18;5506:32;5561:18;5553:6;5550:30;5547:50;;;5593:1;5590;5583:12;5547:50;5616:49;5657:7;5648:6;5637:9;5633:22;5616:49;:::i;:::-;5606:59;;;5283:388;;;;;:::o;5858:320::-;5926:6;5979:2;5967:9;5958:7;5954:23;5950:32;5947:52;;;5995:1;5992;5985:12;5947:52;6035:9;6022:23;6068:18;6060:6;6057:30;6054:50;;;6100:1;6097;6090:12;6054:50;6123:49;6164:7;6155:6;6144:9;6140:22;6123:49;:::i;:::-;6113:59;5858:320;-1:-1:-1;;;;5858:320:35:o;6183:218::-;6330:2;6319:9;6312:21;6293:4;6350:45;6391:2;6380:9;6376:18;6368:6;6350:45;:::i;6406:303::-;6500:6;6508;6561:2;6549:9;6540:7;6536:23;6532:32;6529:52;;;6577:1;6574;6567:12;6529:52;6613:9;6600:23;6590:33;;6642:61;6695:7;6690:2;6679:9;6675:18;6642:61;:::i;:::-;6632:71;;6406:303;;;;;:::o;6714:500::-;6808:6;6861:2;6849:9;6840:7;6836:23;6832:32;6829:52;;;6877:1;6874;6867:12;6829:52;6910:2;6904:9;6952:2;6944:6;6940:15;7021:6;7009:10;7006:22;6985:18;6973:10;6970:34;6967:62;6964:88;;;7032:18;;:::i;:::-;7068:2;7061:22;7107:16;;7092:32;;7178:2;7163:18;;;7157:25;7140:15;;;7133:50;;;;-1:-1:-1;7099:6:35;6714:500;-1:-1:-1;6714:500:35:o;7219:936::-;7314:6;7345:2;7388;7376:9;7367:7;7363:23;7359:32;7356:52;;;7404:1;7401;7394:12;7356:52;7437:9;7431:16;7466:18;7507:2;7499:6;7496:14;7493:34;;;7523:1;7520;7513:12;7493:34;7561:6;7550:9;7546:22;7536:32;;7606:7;7599:4;7595:2;7591:13;7587:27;7577:55;;7628:1;7625;7618:12;7577:55;7657:2;7651:9;7679:2;7675;7672:10;7669:36;;;7685:18;;:::i;:::-;7731:2;7728:1;7724:10;7714:20;;7754:28;7778:2;7774;7770:11;7754:28;:::i;:::-;7816:15;;;7886:11;;;7882:20;;;7847:12;;;;7914:19;;;7911:39;;;7946:1;7943;7936:12;7911:39;7970:11;;;;7990:135;8006:6;8001:3;7998:15;7990:135;;;8072:10;;8060:23;;8023:12;;;;8103;;;;7990:135;;;8144:5;7219:936;-1:-1:-1;;;;;;;;7219:936:35:o;8160:335::-;8362:2;8344:21;;;8401:2;8381:18;;;8374:30;-1:-1:-1;;;8435:2:35;8420:18;;8413:41;8486:2;8471:18;;8160:335::o;8500:380::-;8579:1;8575:12;;;;8622;;;8643:61;;8697:4;8689:6;8685:17;8675:27;;8643:61;8750:2;8742:6;8739:14;8719:18;8716:38;8713:161;;8796:10;8791:3;8787:20;8784:1;8777:31;8831:4;8828:1;8821:15;8859:4;8856:1;8849:15;9010:840;9136:3;9165:1;9198:6;9192:13;9228:36;9254:9;9228:36;:::i;:::-;9283:1;9300:18;;;9327:133;;;;9474:1;9469:356;;;;9293:532;;9327:133;-1:-1:-1;;9360:24:35;;9348:37;;9433:14;;9426:22;9414:35;;9405:45;;;-1:-1:-1;9327:133:35;;9469:356;9500:6;9497:1;9490:17;9530:4;9575:2;9572:1;9562:16;9600:1;9614:165;9628:6;9625:1;9622:13;9614:165;;;9706:14;;9693:11;;;9686:35;9749:16;;;;9643:10;;9614:165;;;9618:3;;;9808:6;9803:3;9799:16;9792:23;;9293:532;-1:-1:-1;9841:3:35;;9010:840;-1:-1:-1;;;;;;9010:840:35:o;9855:184::-;9925:6;9978:2;9966:9;9957:7;9953:23;9949:32;9946:52;;;9994:1;9991;9984:12;9946:52;-1:-1:-1;10017:16:35;;9855:184;-1:-1:-1;9855:184:35:o;10297:127::-;10358:10;10353:3;10349:20;10346:1;10339:31;10389:4;10386:1;10379:15;10413:4;10410:1;10403:15;10429:232;10468:3;10489:17;;;10486:140;;10548:10;10543:3;10539:20;10536:1;10529:31;10583:4;10580:1;10573:15;10611:4;10608:1;10601:15;10486:140;-1:-1:-1;10653:1:35;10642:13;;10429:232::o;10945:334::-;11147:2;11129:21;;;11186:2;11166:18;;;11159:30;-1:-1:-1;;;11220:2:35;11205:18;;11198:40;11270:2;11255:18;;10945:334::o;11600:544::-;11701:2;11696:3;11693:11;11690:448;;;11737:1;11762:5;11758:2;11751:17;11807:4;11803:2;11793:19;11877:2;11865:10;11861:19;11858:1;11854:27;11848:4;11844:38;11913:4;11901:10;11898:20;11895:47;;;-1:-1:-1;11936:4:35;11895:47;11991:2;11986:3;11982:12;11979:1;11975:20;11969:4;11965:31;11955:41;;12046:82;12064:2;12057:5;12054:13;12046:82;;;12109:17;;;12090:1;12079:13;12046:82;;11690:448;11600:544;;;:::o;12320:1348::-;12444:3;12438:10;12471:18;12463:6;12460:30;12457:56;;;12493:18;;:::i;:::-;12522:96;12611:6;12571:38;12603:4;12597:11;12571:38;:::i;:::-;12565:4;12522:96;:::i;:::-;12673:4;;12737:2;12726:14;;12754:1;12749:662;;;;13455:1;13472:6;13469:89;;;-1:-1:-1;13524:19:35;;;13518:26;13469:89;-1:-1:-1;;12277:1:35;12273:11;;;12269:24;12265:29;12255:40;12301:1;12297:11;;;12252:57;13571:81;;12719:943;;12749:662;8957:1;8950:14;;;8994:4;8981:18;;-1:-1:-1;;12785:20:35;;;12902:236;12916:7;12913:1;12910:14;12902:236;;;13005:19;;;12999:26;12984:42;;13097:27;;;;13065:1;13053:14;;;;12932:19;;12902:236;;;12906:3;13166:6;13157:7;13154:19;13151:201;;;13227:19;;;13221:26;-1:-1:-1;;13310:1:35;13306:14;;;13322:3;13302:24;13298:37;13294:42;13279:58;13264:74;;13151:201;-1:-1:-1;;;;;13398:1:35;13382:14;;;13378:22;13365:36;;-1:-1:-1;12320:1348:35:o;13673:289::-;13848:6;13837:9;13830:25;13891:2;13886;13875:9;13871:18;13864:30;13811:4;13911:45;13952:2;13941:9;13937:18;13929:6;13911:45;:::i;13967:386::-;14199:1;14195;14190:3;14186:11;14182:19;14174:6;14170:32;14159:9;14152:51;14239:6;14234:2;14223:9;14219:18;14212:34;14282:2;14277;14266:9;14262:18;14255:30;14133:4;14302:45;14343:2;14332:9;14328:18;14320:6;14302:45;:::i;:::-;14294:53;13967:386;-1:-1:-1;;;;;13967:386:35:o;14358:277::-;14425:6;14478:2;14466:9;14457:7;14453:23;14449:32;14446:52;;;14494:1;14491;14484:12;14446:52;14526:9;14520:16;14579:5;14572:13;14565:21;14558:5;14555:32;14545:60;;14601:1;14598;14591:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue((int256,int256))": "6996cb07",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue(uint256)": "0ff4c916",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set(uint256,(int256,int256))": "cd1b72c4",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"internalType\":\"struct Coord\",\"name\":\"value\",\"type\":\"tuple\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"internalType\":\"struct Coord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"indexer\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"x\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"internalType\":\"struct Coord\",\"name\":\"value\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getEntitiesWithValue(bytes)\":{\"params\":{\"value\":\"Abi-encoded value to get the list of entities with this value for.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"registerIndexer(address)\":{\"params\":{\"indexer\":\"Address of the indexer to notify when a component value is set.\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"Address of the new owner.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to this component to the given address. Can only be called by the owner of this component.\"},\"getEntities()\":{\"notice\":\"Get a list of all entities that have a value in this component.\"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Get a list of all entities that have the specified value in this component.\"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component.\"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"Get the owner of this component \"},\"registerIndexer(address)\":{\"notice\":\"Register a new indexer that gets notified when a component value is set.\"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"Transfer ownership of this component to a new owner. Can only be called by the current owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Addresses with write access to this component \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PositionComponent.sol\":\"PositionComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@latticexyz/=lib/mud/node_modules/@latticexyz/solecs/src/\",\":@rari-capital/=lib/mud/node_modules/@rari-capital/solmate/src/\",\":ds-test/=lib/mud/node_modules/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/mud/node_modules/hardhat/\",\":memmove/=lib/mud/node_modules/memmove/src/\",\":mud/=lib/mud/packages/solecs/src/\",\":openzeppelin-solidity/=lib/mud/node_modules/openzeppelin-solidity/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/mud/node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"lib/mud/node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"lib/mud/packages/solecs/src/Component.sol\":{\"keccak256\":\"0x00b74ab0dba753d7929eb51cfd486693138402b6fb40561fd4fd27b657e6e9c1\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://c77e94c375ff6d54713d8cde581695ab08879f5b9918262300a029dd77587f60\",\"dweb:/ipfs/QmUPJYxV72n5mMgvPR6itQFJq5S8iqbDTm9Xn7HMK6KihA\"]},\"lib/mud/packages/solecs/src/LibTypes.sol\":{\"keccak256\":\"0x6e28306a3fd82d16ffaa780fd4f7dd50749cd7446c5250990855bd903b71bd8d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ebde66e846ec8ff4f5676410a5bcbcee4916ad28ad5f1b53c80ccad57cfa0266\",\"dweb:/ipfs/QmWqmukE1AthrjPNke9uqzSpNFKSzshbfircbQx3waiJeA\"]},\"lib/mud/packages/solecs/src/MapSet.sol\":{\"keccak256\":\"0x9bf5cd536c741f4ac730862fb49cd3d9527c7c62007b986ada5b0591859cb25c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://2da724933f2f22704131e39e27f64e83c214a0678b804358f822da31df4c3cf0\",\"dweb:/ipfs/QmYAbxx94WgpwWViMBmguH8UcDmcS2Mopv7tTB89Cdz1my\"]},\"lib/mud/packages/solecs/src/Set.sol\":{\"keccak256\":\"0x85eeb863a98ccdcc310bf14dd587f5cdfcda9ea7481ebbee03f48af8ad95be41\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://bc140420badafdd67133f9de39f67bf966d39df1dc5974ee5c940a1f2909c4aa\",\"dweb:/ipfs/Qmd7i89MFaqeK39JFbVopiZBatDQd3hCYwCi6XytDEi3rh\"]},\"lib/mud/packages/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc653b5afc93743ae8606604d4941d085f9f25dc9f1a068e9950944e03bb1a61a\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://dce85cd14551eb9008b05843dc3dba0243276c3e3e2f95c3a1dae2f20dd77e69\",\"dweb:/ipfs/QmViPLRuBdczDVJ96eFY2EbrDY5y1BP4igh9AfjodcMM1J\"]},\"lib/mud/packages/solecs/src/interfaces/IEntityContainer.sol\":{\"keccak256\":\"0x95ae0340082f859c0c31108323048c4d179a28df905ba8384f7ab8dd95d2d6a0\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://cbc49eba9e6b4eb603d2ae4189a83b8c9f0b858cd4236c94ebd23b8b06817378\",\"dweb:/ipfs/QmcTePiUxaua9NrUYWKPNMMPyaCxH1rMtniFkrSkTpwBak\"]},\"lib/mud/packages/solecs/src/interfaces/IEntityIndexer.sol\":{\"keccak256\":\"0xd6ca557fd8afe2f16679c67857affc55eb237dbc942a6390097122c65a19a52e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a1ea4345f6064267ed8ab657c945407d3c172e019664fe8ecdd069b1b7b44684\",\"dweb:/ipfs/QmNPv69EEjhA6dv1nC7VHv4JMb35Aop3We52QB5CaAGheF\"]},\"lib/mud/packages/solecs/src/interfaces/IOwned.sol\":{\"keccak256\":\"0x14dd27a7fe1bdd1d17d814a40bab1886a6204ba3e45996f45cf8c6bd412e403b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b4a5677a2bcc9159d4a90b66af9a888e33ac3cf3eae08f0b8548e9510131ec82\",\"dweb:/ipfs/Qmdj7Jz274wP2KevSqdpFQc4msVi9jfkrNsQvCFoHNJcDG\"]},\"lib/mud/packages/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x8846ddb1701b59f8cbf80225ea8e85bd2991ab6ee0515c011d79a265f47f93fe\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://959ba1dcc93439c82e53a1e9858bac831a3c003eae82fc35edd931d7e7da4f77\",\"dweb:/ipfs/QmQu2vGG9bDpuTHYJNSW6aXCp4FYCVzew2XpjVjZm59CAx\"]},\"lib/mud/packages/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0xde47447df2e0f42b66a1c9ec6432ed30cad604de2b5eb673341abb772832be80\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://83bd8652b8531460cc580d6cd28fc8f0448ec9f032cd6581aee5298a4d0a12e9\",\"dweb:/ipfs/QmZsnaajiBVjcC6S8K39wdfnyZcH4B1FZYe2qL3p4iiwXD\"]},\"lib/mud/packages/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x3956cfb4b92afd3eccfea772480deb00ba573629bc0f36db5d948e2d168377cb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1aafe610e9283e1d7b1f45ba49cf77c8cf770241eeaa5317171df30b5f114c7d\",\"dweb:/ipfs/QmYShHHJqSfkdY3vcbKS18AuBpBmfwMUzebxZbPpgZDcfq\"]},\"src/PositionComponent.sol\":{\"keccak256\":\"0x2e843996a54a6d8ff92a2620d94ef961efa1ae7bf43098ffeda114b0d26ee282\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab1bc5008b80106730e0bf04c9fa86706e1755a7fb61f00707b8a134c2b25c25\",\"dweb:/ipfs/QmWTg7GcM453KDZFXDUKnjgVPLwmtFx8ij1kkpRKrupuYc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Coord",
              "name": "value",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "x",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "y",
                  "type": "int256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct Coord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "x",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "y",
                  "type": "int256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "indexer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "struct Coord",
              "name": "value",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int256",
                  "name": "x",
                  "type": "int256"
                },
                {
                  "internalType": "int256",
                  "name": "y",
                  "type": "int256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getEntitiesWithValue(bytes)": {
            "params": {
              "value": "Abi-encoded value to get the list of entities with this value for."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "registerIndexer(address)": {
            "params": {
              "indexer": "Address of the indexer to notify when a component value is set."
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "newOwner": "Address of the new owner."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to this component to the given address. Can only be called by the owner of this component."
          },
          "getEntities()": {
            "notice": "Get a list of all entities that have a value in this component."
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Get a list of all entities that have the specified value in this component."
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component."
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "Get the owner of this component "
          },
          "registerIndexer(address)": {
            "notice": "Register a new indexer that gets notified when a component value is set."
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "Transfer ownership of this component to a new owner. Can only be called by the current owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Addresses with write access to this component "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=lib/mud/node_modules/@latticexyz/solecs/src/",
        ":@rari-capital/=lib/mud/node_modules/@rari-capital/solmate/src/",
        ":ds-test/=lib/mud/node_modules/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=lib/mud/node_modules/hardhat/",
        ":memmove/=lib/mud/node_modules/memmove/src/",
        ":mud/=lib/mud/packages/solecs/src/",
        ":openzeppelin-solidity/=lib/mud/node_modules/openzeppelin-solidity/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PositionComponent.sol": "PositionComponent"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/mud/node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "lib/mud/node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "lib/mud/packages/solecs/src/Component.sol": {
        "keccak256": "0x00b74ab0dba753d7929eb51cfd486693138402b6fb40561fd4fd27b657e6e9c1",
        "urls": [
          "bzz-raw://c77e94c375ff6d54713d8cde581695ab08879f5b9918262300a029dd77587f60",
          "dweb:/ipfs/QmUPJYxV72n5mMgvPR6itQFJq5S8iqbDTm9Xn7HMK6KihA"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/LibTypes.sol": {
        "keccak256": "0x6e28306a3fd82d16ffaa780fd4f7dd50749cd7446c5250990855bd903b71bd8d",
        "urls": [
          "bzz-raw://ebde66e846ec8ff4f5676410a5bcbcee4916ad28ad5f1b53c80ccad57cfa0266",
          "dweb:/ipfs/QmWqmukE1AthrjPNke9uqzSpNFKSzshbfircbQx3waiJeA"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/MapSet.sol": {
        "keccak256": "0x9bf5cd536c741f4ac730862fb49cd3d9527c7c62007b986ada5b0591859cb25c",
        "urls": [
          "bzz-raw://2da724933f2f22704131e39e27f64e83c214a0678b804358f822da31df4c3cf0",
          "dweb:/ipfs/QmYAbxx94WgpwWViMBmguH8UcDmcS2Mopv7tTB89Cdz1my"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/Set.sol": {
        "keccak256": "0x85eeb863a98ccdcc310bf14dd587f5cdfcda9ea7481ebbee03f48af8ad95be41",
        "urls": [
          "bzz-raw://bc140420badafdd67133f9de39f67bf966d39df1dc5974ee5c940a1f2909c4aa",
          "dweb:/ipfs/Qmd7i89MFaqeK39JFbVopiZBatDQd3hCYwCi6XytDEi3rh"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc653b5afc93743ae8606604d4941d085f9f25dc9f1a068e9950944e03bb1a61a",
        "urls": [
          "bzz-raw://dce85cd14551eb9008b05843dc3dba0243276c3e3e2f95c3a1dae2f20dd77e69",
          "dweb:/ipfs/QmViPLRuBdczDVJ96eFY2EbrDY5y1BP4igh9AfjodcMM1J"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IEntityContainer.sol": {
        "keccak256": "0x95ae0340082f859c0c31108323048c4d179a28df905ba8384f7ab8dd95d2d6a0",
        "urls": [
          "bzz-raw://cbc49eba9e6b4eb603d2ae4189a83b8c9f0b858cd4236c94ebd23b8b06817378",
          "dweb:/ipfs/QmcTePiUxaua9NrUYWKPNMMPyaCxH1rMtniFkrSkTpwBak"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IEntityIndexer.sol": {
        "keccak256": "0xd6ca557fd8afe2f16679c67857affc55eb237dbc942a6390097122c65a19a52e",
        "urls": [
          "bzz-raw://a1ea4345f6064267ed8ab657c945407d3c172e019664fe8ecdd069b1b7b44684",
          "dweb:/ipfs/QmNPv69EEjhA6dv1nC7VHv4JMb35Aop3We52QB5CaAGheF"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IOwned.sol": {
        "keccak256": "0x14dd27a7fe1bdd1d17d814a40bab1886a6204ba3e45996f45cf8c6bd412e403b",
        "urls": [
          "bzz-raw://b4a5677a2bcc9159d4a90b66af9a888e33ac3cf3eae08f0b8548e9510131ec82",
          "dweb:/ipfs/Qmdj7Jz274wP2KevSqdpFQc4msVi9jfkrNsQvCFoHNJcDG"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x8846ddb1701b59f8cbf80225ea8e85bd2991ab6ee0515c011d79a265f47f93fe",
        "urls": [
          "bzz-raw://959ba1dcc93439c82e53a1e9858bac831a3c003eae82fc35edd931d7e7da4f77",
          "dweb:/ipfs/QmQu2vGG9bDpuTHYJNSW6aXCp4FYCVzew2XpjVjZm59CAx"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0xde47447df2e0f42b66a1c9ec6432ed30cad604de2b5eb673341abb772832be80",
        "urls": [
          "bzz-raw://83bd8652b8531460cc580d6cd28fc8f0448ec9f032cd6581aee5298a4d0a12e9",
          "dweb:/ipfs/QmZsnaajiBVjcC6S8K39wdfnyZcH4B1FZYe2qL3p4iiwXD"
        ],
        "license": "Unlicense"
      },
      "lib/mud/packages/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x3956cfb4b92afd3eccfea772480deb00ba573629bc0f36db5d948e2d168377cb",
        "urls": [
          "bzz-raw://1aafe610e9283e1d7b1f45ba49cf77c8cf770241eeaa5317171df30b5f114c7d",
          "dweb:/ipfs/QmYShHHJqSfkdY3vcbKS18AuBpBmfwMUzebxZbPpgZDcfq"
        ],
        "license": "Unlicense"
      },
      "src/PositionComponent.sol": {
        "keccak256": "0x2e843996a54a6d8ff92a2620d94ef961efa1ae7bf43098ffeda114b0d26ee282",
        "urls": [
          "bzz-raw://ab1bc5008b80106730e0bf04c9fa86706e1755a7fb61f00707b8a134c2b25c25",
          "dweb:/ipfs/QmWTg7GcM453KDZFXDUKnjgVPLwmtFx8ij1kkpRKrupuYc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PositionComponent.sol",
    "id": 27871,
    "exportedSymbols": {
      "Component": [
        24262
      ],
      "Coord": [
        27757
      ],
      "ID": [
        27765
      ],
      "LibTypes": [
        25585
      ],
      "PositionComponent": [
        27870
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1077:30",
    "nodes": [
      {
        "id": 27748,
        "nodeType": "PragmaDirective",
        "src": "32:24:30",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 27750,
        "nodeType": "ImportDirective",
        "src": "58:44:30",
        "absolutePath": "lib/mud/packages/solecs/src/Component.sol",
        "file": "mud/Component.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27871,
        "sourceUnit": 24263,
        "symbolAliases": [
          {
            "foreign": {
              "id": 27749,
              "name": "Component",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24262,
              "src": "66:9:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 27752,
        "nodeType": "ImportDirective",
        "src": "103:43:30",
        "absolutePath": "lib/mud/packages/solecs/src/Component.sol",
        "file": "mud/Component.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27871,
        "sourceUnit": 24263,
        "symbolAliases": [
          {
            "foreign": {
              "id": 27751,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25585,
              "src": "111:8:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 27757,
        "nodeType": "StructDefinition",
        "src": "148:44:30",
        "canonicalName": "Coord",
        "members": [
          {
            "constant": false,
            "id": 27754,
            "mutability": "mutable",
            "name": "x",
            "nameLocation": "174:1:30",
            "nodeType": "VariableDeclaration",
            "scope": 27757,
            "src": "167:8:30",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 27753,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "167:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 27756,
            "mutability": "mutable",
            "name": "y",
            "nameLocation": "188:1:30",
            "nodeType": "VariableDeclaration",
            "scope": 27757,
            "src": "181:8:30",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 27755,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "181:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "Coord",
        "nameLocation": "155:5:30",
        "scope": 27871,
        "visibility": "public"
      },
      {
        "id": 27765,
        "nodeType": "VariableDeclaration",
        "src": "194:70:30",
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "211:2:30",
        "scope": 27871,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 27758,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "194:7:30",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "6578616d706c652e636f6d706f6e656e742e506f736974696f6e",
                  "id": 27762,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "234:28:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_7e8e7c9969e0c310afdcb6eda1d64a4b2de16d6efa693ae872ce6315c4748715",
                    "typeString": "literal_string \"example.component.Position\""
                  },
                  "value": "example.component.Position"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_7e8e7c9969e0c310afdcb6eda1d64a4b2de16d6efa693ae872ce6315c4748715",
                    "typeString": "literal_string \"example.component.Position\""
                  }
                ],
                "id": 27761,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "224:9:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 27763,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "224:39:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 27760,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "216:7:30",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 27759,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "216:7:30",
              "typeDescriptions": {}
            }
          },
          "id": 27764,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "nameLocations": [],
          "names": [],
          "nodeType": "FunctionCall",
          "src": "216:48:30",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 27870,
        "nodeType": "ContractDefinition",
        "src": "267:841:30",
        "nodes": [
          {
            "id": 27777,
            "nodeType": "FunctionDefinition",
            "src": "313:50:30",
            "body": {
              "id": 27776,
              "nodeType": "Block",
              "src": "361:2:30",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 27772,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27769,
                    "src": "350:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 27773,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27765,
                    "src": "357:2:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 27774,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 27771,
                  "name": "Component",
                  "nameLocations": [
                    "340:9:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24262,
                  "src": "340:9:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "340:20:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 27770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27769,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "333:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 27777,
                  "src": "325:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "324:15:30"
            },
            "returnParameters": {
              "id": 27775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "361:0:30"
            },
            "scope": 27870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27794,
            "nodeType": "FunctionDefinition",
            "src": "369:105:30",
            "body": {
              "id": 27793,
              "nodeType": "Block",
              "src": "427:47:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27786,
                        "name": "entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27779,
                        "src": "441:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 27789,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27782,
                            "src": "460:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Coord_$27757_calldata_ptr",
                              "typeString": "struct Coord calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Coord_$27757_calldata_ptr",
                              "typeString": "struct Coord calldata"
                            }
                          ],
                          "expression": {
                            "id": 27787,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "449:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 27788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "453:6:30",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "449:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 27790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "449:17:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27785,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27794,
                        24105
                      ],
                      "referencedDeclaration": 24105,
                      "src": "437:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 27791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:30:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27792,
                  "nodeType": "ExpressionStatement",
                  "src": "437:30:30"
                }
              ]
            },
            "functionSelector": "cd1b72c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "378:3:30",
            "parameters": {
              "id": 27783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27779,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "390:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 27794,
                  "src": "382:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "382:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27782,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "413:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 27794,
                  "src": "398:20:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Coord_$27757_calldata_ptr",
                    "typeString": "struct Coord"
                  },
                  "typeName": {
                    "id": 27781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27780,
                      "name": "Coord",
                      "nameLocations": [
                        "398:5:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27757,
                      "src": "398:5:30"
                    },
                    "referencedDeclaration": 27757,
                    "src": "398:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Coord_$27757_storage_ptr",
                      "typeString": "struct Coord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "381:38:30"
            },
            "returnParameters": {
              "id": 27784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:30"
            },
            "scope": 27870,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27812,
            "nodeType": "FunctionDefinition",
            "src": "480:133:30",
            "body": {
              "id": 27811,
              "nodeType": "Block",
              "src": "549:64:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27805,
                            "name": "entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27796,
                            "src": "589:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 27804,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24212,
                          "src": "577:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 27806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "577:19:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 27807,
                            "name": "Coord",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27757,
                            "src": "599:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Coord_$27757_storage_ptr_$",
                              "typeString": "type(struct Coord storage pointer)"
                            }
                          }
                        ],
                        "id": 27808,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "598:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Coord_$27757_storage_ptr_$",
                          "typeString": "type(struct Coord storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Coord_$27757_storage_ptr_$",
                          "typeString": "type(struct Coord storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 27802,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "566:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 27803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "570:6:30",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "566:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 27809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "566:40:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Coord_$27757_memory_ptr",
                      "typeString": "struct Coord memory"
                    }
                  },
                  "functionReturnParameters": 27801,
                  "id": 27810,
                  "nodeType": "Return",
                  "src": "559:47:30"
                }
              ]
            },
            "functionSelector": "0ff4c916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "489:8:30",
            "parameters": {
              "id": 27797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27796,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "506:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 27812,
                  "src": "498:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "498:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "497:16:30"
            },
            "returnParameters": {
              "id": 27801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27812,
                  "src": "535:12:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Coord_$27757_memory_ptr",
                    "typeString": "struct Coord"
                  },
                  "typeName": {
                    "id": 27799,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27798,
                      "name": "Coord",
                      "nameLocations": [
                        "535:5:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27757,
                      "src": "535:5:30"
                    },
                    "referencedDeclaration": 27757,
                    "src": "535:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Coord_$27757_storage_ptr",
                      "typeString": "struct Coord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "534:14:30"
            },
            "scope": 27870,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27829,
            "nodeType": "FunctionDefinition",
            "src": "619:182:30",
            "body": {
              "id": 27828,
              "nodeType": "Block",
              "src": "738:63:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27824,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27815,
                            "src": "787:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Coord_$27757_calldata_ptr",
                              "typeString": "struct Coord calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Coord_$27757_calldata_ptr",
                              "typeString": "struct Coord calldata"
                            }
                          ],
                          "expression": {
                            "id": 27822,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "776:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 27823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "780:6:30",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "776:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 27825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "776:17:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 27821,
                      "name": "getEntitiesWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27829,
                        24244
                      ],
                      "referencedDeclaration": 24244,
                      "src": "755:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (uint256[] memory)"
                      }
                    },
                    "id": 27826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:39:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 27820,
                  "id": 27827,
                  "nodeType": "Return",
                  "src": "748:46:30"
                }
              ]
            },
            "functionSelector": "6996cb07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitiesWithValue",
            "nameLocation": "628:20:30",
            "parameters": {
              "id": 27816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27815,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "664:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 27829,
                  "src": "649:20:30",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Coord_$27757_calldata_ptr",
                    "typeString": "struct Coord"
                  },
                  "typeName": {
                    "id": 27814,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 27813,
                      "name": "Coord",
                      "nameLocations": [
                        "649:5:30"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 27757,
                      "src": "649:5:30"
                    },
                    "referencedDeclaration": 27757,
                    "src": "649:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Coord_$27757_storage_ptr",
                      "typeString": "struct Coord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:22:30"
            },
            "returnParameters": {
              "id": 27820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27829,
                  "src": "716:16:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27817,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "716:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27818,
                    "nodeType": "ArrayTypeName",
                    "src": "716:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "715:18:30"
            },
            "scope": 27870,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27869,
            "nodeType": "FunctionDefinition",
            "src": "807:299:30",
            "body": {
              "id": 27868,
              "nodeType": "Block",
              "src": "954:152:30",
              "statements": [
                {
                  "expression": {
                    "id": 27844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 27840,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27834,
                        "src": "964:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 27842,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 27841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "969:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "964:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "78",
                      "id": 27843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "974:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                        "typeString": "literal_string \"x\""
                      },
                      "value": "x"
                    },
                    "src": "964:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 27845,
                  "nodeType": "ExpressionStatement",
                  "src": "964:13:30"
                },
                {
                  "expression": {
                    "id": 27852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 27846,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27838,
                        "src": "987:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$25584_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 27848,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 27847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "994:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "987:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 27849,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25585,
                          "src": "999:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$25585_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 27850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1008:11:30",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25584,
                        "src": "999:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$25584_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 27851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1020:6:30",
                      "memberName": "INT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25558,
                      "src": "999:27:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "987:39:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$25584",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 27853,
                  "nodeType": "ExpressionStatement",
                  "src": "987:39:30"
                },
                {
                  "expression": {
                    "id": 27858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 27854,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27834,
                        "src": "1037:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 27856,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 27855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1042:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1037:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "79",
                      "id": 27857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1047:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                        "typeString": "literal_string \"y\""
                      },
                      "value": "y"
                    },
                    "src": "1037:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 27859,
                  "nodeType": "ExpressionStatement",
                  "src": "1037:13:30"
                },
                {
                  "expression": {
                    "id": 27866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 27860,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27838,
                        "src": "1060:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$25584_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 27862,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 27861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1067:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1060:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 27863,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25585,
                          "src": "1072:8:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$25585_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 27864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1081:11:30",
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25584,
                        "src": "1072:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$25584_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 27865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1093:6:30",
                      "memberName": "INT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25558,
                      "src": "1072:27:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1060:39:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$25584",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 27867,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:39:30"
                }
              ]
            },
            "baseFunctions": [
              24023
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "816:9:30",
            "overrides": {
              "id": 27831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "864:8:30"
            },
            "parameters": {
              "id": 27830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:2:30"
            },
            "returnParameters": {
              "id": 27839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27834,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "906:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 27869,
                  "src": "890:20:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27832,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "890:6:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 27833,
                    "nodeType": "ArrayTypeName",
                    "src": "890:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27838,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "942:6:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 27869,
                  "src": "912:36:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$25584_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27836,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 27835,
                        "name": "LibTypes.SchemaValue",
                        "nameLocations": [
                          "912:8:30",
                          "921:11:30"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 25584,
                        "src": "912:20:30"
                      },
                      "referencedDeclaration": 25584,
                      "src": "912:20:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$25584",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 27837,
                    "nodeType": "ArrayTypeName",
                    "src": "912:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$25584_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "889:60:30"
            },
            "scope": 27870,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27766,
              "name": "Component",
              "nameLocations": [
                "297:9:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24262,
              "src": "297:9:30"
            },
            "id": 27767,
            "nodeType": "InheritanceSpecifier",
            "src": "297:9:30"
          }
        ],
        "canonicalName": "PositionComponent",
        "contractDependencies": [
          25772,
          25905
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27870,
          24262,
          26637,
          26688
        ],
        "name": "PositionComponent",
        "nameLocation": "276:17:30",
        "scope": 27871,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 30
}